<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<title>The rules and guidelines - LArSoft - Fermilab Redmine</title>
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<meta name="description" content="Redmine" />
<meta name="keywords" content="issue,bug,tracker" />
<meta name="csrf-param" content="authenticity_token" />
<meta name="csrf-token" content="Do8NV8DOUuoCtDgvzGRikagHaajqWxWz87XUbQVrgzfkYenKQFOunBvD1/YGiTaGwV6yXHGv1PeKefo2D57cgw==" />
<link rel='shortcut icon' href='/redmine/favicon.ico?1560171137' />
<link rel="stylesheet" media="all" href="/redmine/stylesheets/jquery/jquery-ui-1.11.0.css?1601072361" />
<link rel="stylesheet" media="all" href="/redmine/stylesheets/application.css?1601072361" />
<link rel="stylesheet" media="all" href="/redmine/stylesheets/responsive.css?1601072360" />

<script src="/redmine/javascripts/jquery-1.11.1-ui-1.11.0-ujs-3.1.4.js?1601072362"></script>
<script src="/redmine/javascripts/application.js?1601072361"></script>
<script src="/redmine/javascripts/responsive.js?1601072360"></script>
<script>
//<![CDATA[
$(window).load(function(){ warnLeavingUnsaved('The current page contains unsaved text that will be lost if you leave this page.'); });
//]]>
</script>

<link rel="stylesheet" media="screen" href="/redmine/plugin_assets/redmine_countable_headers/stylesheets/countable_headers.css?1604432132" />  <script src="/redmine/plugin_assets/redmine_sortable_table/javascripts/sortable_table.js?1601318223"></script><link rel="stylesheet" media="screen" href="/redmine/plugin_assets/redmine_sortable_table/stylesheets/sortable_table.css?1601318223" /> <link rel="stylesheet" media="screen" href="/redmine/plugin_assets/redmine_group_assignee/stylesheets/tab_content_assignees.css?1604592738" />
<!-- page specific tags -->
  <script src="/redmine/javascripts/attachments.js?1601072363"></script>
</head>
<body class="project-larsoft controller-wiki action-show">

<div id="wrapper">

<div class="flyout-menu js-flyout-menu">


        <div class="flyout-menu__search">
            <form action="/redmine/projects/larsoft/search" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
            <input type="hidden" name="wiki_pages" value="1" />
            <label class="search-magnifier search-magnifier--flyout" for="flyout-search">&#9906;</label>
            <input type="text" name="q" id="flyout-search" class="small js-search-input" placeholder="Search" />
</form>        </div>

        <div class="flyout-menu__avatar flyout-menu__avatar--no-avatar">
            <a class="user active" href="/redmine/users/7">garren</a>
        </div>

        <h3>Project</h3>
        <span class="js-project-menu"></span>

    <h3>General</h3>
    <span class="js-general-menu"></span>

    <span class="js-sidebar flyout-menu__sidebar"></span>

    <h3>Profile</h3>
    <span class="js-profile-menu"></span>

</div>

<div id="wrapper2">
<div id="wrapper3">
<div id="top-menu">
    <div id="account">
        <ul><li><a class="my-account" href="/redmine/my/account">My account</a></li><li><a class="logout" rel="nofollow" data-method="post" href="/redmine/logout">Sign out</a></li></ul>    </div>
    <div id="loggedas">Logged in as <a class="user active" href="/redmine/users/7">garren</a></div>
    <ul><li><a class="home" href="/redmine/">Home</a></li><li><a class="my-page" href="/redmine/my/page">My page</a></li><li><a class="projects" href="/redmine/projects">Projects</a></li><li><a class="help" href="https://www.redmine.org/guide">Help</a></li></ul></div>

<div id="header">

    <a href="#" class="mobile-toggle-button js-flyout-menu-toggle-button"></a>

    <div id="quick-search">
        <form action="/redmine/projects/larsoft/search" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
        <input type="hidden" name="scope" value="subprojects" />
        <input type="hidden" name="wiki_pages" value="1" />
        <label for='q'>
          <a accesskey="4" href="/redmine/projects/larsoft/search?scope=subprojects">Search</a>:
        </label>
        <input type="text" name="q" id="q" size="20" class="small" accesskey="f" />
</form>        <div id="project-jump" class="drdn"><span class="drdn-trigger">LArSoft</span><div class="drdn-content"><div class="quick-search"><input type="text" name="q" id="projects-quick-search" value="" class="autocomplete" data-automcomplete-url="/redmine/projects/autocomplete.js?jump=wiki" autocomplete="off" /></div><div class="drdn-items projects selection"><a title="Accelerator Modeling" href="/redmine/projects/accelerator-modeling?jump=wiki"><span style="padding-left:0px;">Accelerator Modeling</span></a><a title="ArgoNeuT Offline" href="/redmine/projects/t962offline?jump=wiki"><span style="padding-left:0px;">ArgoNeuT Offline</span></a><a title="artdaq" href="/redmine/projects/artdaq?jump=wiki"><span style="padding-left:0px;">artdaq</span></a><a title="artdaq Demo" href="/redmine/projects/artdaq-demo?jump=wiki"><span style="padding-left:16px;">artdaq Demo</span></a><a title="artdaq Core Demo" href="/redmine/projects/artdaq-core-demo?jump=wiki"><span style="padding-left:32px;">artdaq Core Demo</span></a><a title="artdaq Utilities" href="/redmine/projects/artdaq-utilities?jump=wiki"><span style="padding-left:16px;">artdaq Utilities</span></a><a title="artdaq database" href="/redmine/projects/artdaq-database?jump=wiki"><span style="padding-left:32px;">artdaq database</span></a><a title="artdaq-mfextensions" href="/redmine/projects/mf-extensions?jump=wiki"><span style="padding-left:16px;">artdaq-mfextensions</span></a><a title="artg4" href="/redmine/projects/artg4?jump=wiki"><span style="padding-left:0px;">artg4</span></a><a title="artg4 Geant N02 example" href="/redmine/projects/artg4geantn02?jump=wiki"><span style="padding-left:16px;">artg4 Geant N02 example</span></a><a title="artg4example" href="/redmine/projects/artg4example?jump=wiki"><span style="padding-left:16px;">artg4example</span></a><a title="cet-is" href="/redmine/projects/cet-is?jump=wiki"><span style="padding-left:0px;">cet-is</span></a><a title="art" href="/redmine/projects/art?jump=wiki"><span style="padding-left:16px;">art</span></a><a title="art Hough" href="/redmine/projects/art-hough?jump=wiki"><span style="padding-left:32px;">art Hough</span></a><a title="art-workbook" href="/redmine/projects/art-workbook?jump=wiki"><span style="padding-left:32px;">art-workbook</span></a><a title="art_root_io" href="/redmine/projects/art_root_io?jump=wiki"><span style="padding-left:32px;">art_root_io</span></a><a title="artExtensions" href="/redmine/projects/artextensions?jump=wiki"><span style="padding-left:16px;">artExtensions</span></a><a title="Systematics Tools" href="/redmine/projects/systematicstools?jump=wiki"><span style="padding-left:32px;">Systematics Tools</span></a><a title="artUtilScripts" href="/redmine/projects/artutilscripts?jump=wiki"><span style="padding-left:16px;">artUtilScripts</span></a><a title="canvas" href="/redmine/projects/canvas?jump=wiki"><span style="padding-left:16px;">canvas</span></a><a title="canvas_root_io" href="/redmine/projects/canvas_root_io?jump=wiki"><span style="padding-left:32px;">canvas_root_io</span></a><a title="cet-is-private" href="/redmine/projects/cet-is-private?jump=wiki"><span style="padding-left:16px;">cet-is-private</span></a><a title="cet-is-public" href="/redmine/projects/cet-is-public?jump=wiki"><span style="padding-left:16px;">cet-is-public</span></a><a title="cetbuildtools" href="/redmine/projects/cetbuildtools?jump=wiki"><span style="padding-left:16px;">cetbuildtools</span></a><a title="cetlib" href="/redmine/projects/cetlib?jump=wiki"><span style="padding-left:16px;">cetlib</span></a><a title="cetlib_except" href="/redmine/projects/cetlib_except?jump=wiki"><span style="padding-left:32px;">cetlib_except</span></a><a title="CetModules" href="/redmine/projects/cetmodules?jump=wiki"><span style="padding-left:16px;">CetModules</span></a><a title="cetpkgsupport" href="/redmine/projects/cetpkgsupport?jump=wiki"><span style="padding-left:16px;">cetpkgsupport</span></a><a title="Chris Green&#39;s Stuff" href="/redmine/projects/cet-chg?jump=wiki"><span style="padding-left:16px;">Chris Green&#39;s Stuff</span></a><a title="CosmoSIS UPS" href="/redmine/projects/cosmosis_ups?jump=wiki"><span style="padding-left:16px;">CosmoSIS UPS</span></a><a title="cpp0x" href="/redmine/projects/cpp0x?jump=wiki"><span style="padding-left:16px;">cpp0x</span></a><a title="critic" href="/redmine/projects/critic?jump=wiki"><span style="padding-left:16px;">critic</span></a><a title="DocDB migration" href="/redmine/projects/docdb-migration?jump=wiki"><span style="padding-left:16px;">DocDB migration</span></a><a title="El Capitan Support" href="/redmine/projects/el-capitan-support?jump=wiki"><span style="padding-left:16px;">El Capitan Support</span></a><a title="fhicl" href="/redmine/projects/fhicl?jump=wiki"><span style="padding-left:16px;">fhicl</span></a><a title="fhicl-cpp" href="/redmine/projects/fhicl-cpp?jump=wiki"><span style="padding-left:32px;">fhicl-cpp</span></a><a title="fhicl-py" href="/redmine/projects/fhicl-py?jump=wiki"><span style="padding-left:32px;">fhicl-py</span></a><a title="Framework Build Instructions" href="/redmine/projects/build-framework?jump=wiki"><span style="padding-left:16px;">Framework Build Instructions</span></a><a title="hep_hpc_toolkit" href="/redmine/projects/hep_hpc_toolkit?jump=wiki"><span style="padding-left:32px;">hep_hpc_toolkit</span></a><a title="gallery" href="/redmine/projects/gallery?jump=wiki"><span style="padding-left:16px;">gallery</span></a><a title="hep_concurrency" href="/redmine/projects/hep_concurrency?jump=wiki"><span style="padding-left:16px;">hep_concurrency</span></a><a title="Lynn Garren&#39;s notes" href="/redmine/projects/lynn-garren-s-notes?jump=wiki"><span style="padding-left:16px;">Lynn Garren&#39;s notes</span></a><a title="messagefacility" href="/redmine/projects/messagefacility?jump=wiki"><span style="padding-left:16px;">messagefacility</span></a><a title="mrb" href="/redmine/projects/mrb?jump=wiki"><span style="padding-left:16px;">mrb</span></a><a title="SciSoft" href="/redmine/projects/scisoft?jump=wiki"><span style="padding-left:16px;">SciSoft</span></a><a title="Spack Planning" href="/redmine/projects/spack-planning?jump=wiki"><span style="padding-left:16px;">Spack Planning</span></a><a title="VMs and Containers" href="/redmine/projects/vms-and-containers?jump=wiki"><span style="padding-left:16px;">VMs and Containers</span></a><a title="ubuntu vm" href="/redmine/projects/ubuntu-vm?jump=wiki"><span style="padding-left:32px;">ubuntu vm</span></a><a title="cet-pythia6" href="/redmine/projects/cet-pythia6?jump=wiki"><span style="padding-left:16px;">cet-pythia6</span></a><a title="splines" href="/redmine/projects/splines?jump=wiki"><span style="padding-left:16px;">splines</span></a><a title="studio" href="/redmine/projects/studio?jump=wiki"><span style="padding-left:16px;">studio</span></a><a title="tag_suite" href="/redmine/projects/tag_suite?jump=wiki"><span style="padding-left:16px;">tag_suite</span></a><a title="art/LArSoft Course" href="/redmine/projects/art-larsoft-course?jump=wiki"><span style="padding-left:0px;">art/LArSoft Course</span></a><a title="LArIAT" href="/redmine/projects/lardbt?jump=wiki"><span style="padding-left:0px;">LArIAT</span></a><a title="LArIAT Online" href="/redmine/projects/lariat-online?jump=wiki"><span style="padding-left:16px;">LArIAT Online</span></a><a title="LArSoft" class="selected" href="/redmine/projects/larsoft?jump=wiki"><span style="padding-left:0px;">LArSoft</span></a><a title="ArgoNeuT code" href="/redmine/projects/argoneutcode?jump=wiki"><span style="padding-left:16px;">ArgoNeuT code</span></a><a title="ArgoNeuT Analysis" href="/redmine/projects/t962ana?jump=wiki"><span style="padding-left:32px;">ArgoNeuT Analysis</span></a><a title="LAr-Continuous-Integration" href="/redmine/projects/lar-ci?jump=wiki"><span style="padding-left:16px;">LAr-Continuous-Integration</span></a><a title="LAr1ND code" href="/redmine/projects/lar1ndcode?jump=wiki"><span style="padding-left:16px;">LAr1ND code</span></a><a title="LArAdmin" href="/redmine/projects/laradmin?jump=wiki"><span style="padding-left:16px;">LArAdmin</span></a><a title="LArAna" href="/redmine/projects/larana?jump=wiki"><span style="padding-left:16px;">LArAna</span></a><a title="LArCore" href="/redmine/projects/larcore?jump=wiki"><span style="padding-left:16px;">LArCore</span></a><a title="LArCoreAlg" href="/redmine/projects/larcorealg?jump=wiki"><span style="padding-left:16px;">LArCoreAlg</span></a><a title="LArCoreObj" href="/redmine/projects/larcoreobj?jump=wiki"><span style="padding-left:16px;">LArCoreObj</span></a><a title="LArData" href="/redmine/projects/lardata?jump=wiki"><span style="padding-left:16px;">LArData</span></a><a title="LArDataAlg" href="/redmine/projects/lardataalg?jump=wiki"><span style="padding-left:16px;">LArDataAlg</span></a><a title="LArDataObj" href="/redmine/projects/lardataobj?jump=wiki"><span style="padding-left:16px;">LArDataObj</span></a><a title="LArEventDisplay" href="/redmine/projects/lareventdisplay?jump=wiki"><span style="padding-left:16px;">LArEventDisplay</span></a><a title="LArEvt" href="/redmine/projects/larevt?jump=wiki"><span style="padding-left:16px;">LArEvt</span></a><a title="LArExamples" href="/redmine/projects/larexamples?jump=wiki"><span style="padding-left:16px;">LArExamples</span></a><a title="LArG4" href="/redmine/projects/larg4?jump=wiki"><span style="padding-left:16px;">LArG4</span></a><a title="larliteintegration" href="/redmine/projects/sketch?jump=wiki"><span style="padding-left:16px;">larliteintegration</span></a><a title="LArPandora" href="/redmine/projects/larpandora?jump=wiki"><span style="padding-left:16px;">LArPandora</span></a><a title="LArPandoraContent" href="/redmine/projects/larpandoracontent?jump=wiki"><span style="padding-left:16px;">LArPandoraContent</span></a><a title="LArReco" href="/redmine/projects/larreco?jump=wiki"><span style="padding-left:16px;">LArReco</span></a><a title="LArRecoDNN" href="/redmine/projects/larrecodnn?jump=wiki"><span style="padding-left:16px;">LArRecoDNN</span></a><a title="LArRelTools" href="/redmine/projects/larreltools?jump=wiki"><span style="padding-left:16px;">LArRelTools</span></a><a title="larshoweralg" href="/redmine/projects/larshoweralg?jump=wiki"><span style="padding-left:16px;">larshoweralg</span></a><a title="LArSim" href="/redmine/projects/larsim?jump=wiki"><span style="padding-left:16px;">LArSim</span></a><a title="LArSimAlg" href="/redmine/projects/larsimalg?jump=wiki"><span style="padding-left:16px;">LArSimAlg</span></a><a title="LArSimObj" href="/redmine/projects/larsimobj?jump=wiki"><span style="padding-left:16px;">LArSimObj</span></a><a title="LArSimTools" href="/redmine/projects/larsimtools?jump=wiki"><span style="padding-left:16px;">LArSimTools</span></a><a title="LArSoft-SVN (legacy site)" href="/redmine/projects/larsoftsvn?jump=wiki"><span style="padding-left:16px;">LArSoft-SVN (legacy site)</span></a><a title="LArSoft Alpha Test" href="/redmine/projects/larsoft-alpha?jump=wiki"><span style="padding-left:32px;">LArSoft Alpha Test</span></a><a title="LArSoft Experiments Alpha Test" href="/redmine/projects/larsoft-experiment-alpha?jump=wiki"><span style="padding-left:48px;">LArSoft Experiments Alpha Test</span></a><a title="LArSoftObj" href="/redmine/projects/larsoftobj?jump=wiki"><span style="padding-left:16px;">LArSoftObj</span></a><a title="LArSystematics" href="/redmine/projects/larsystematics?jump=wiki"><span style="padding-left:16px;">LArSystematics</span></a><a title="LArTestAlg" href="/redmine/projects/lartestalg?jump=wiki"><span style="padding-left:16px;">LArTestAlg</span></a><a title="LArToolObj" href="/redmine/projects/lartoolobj?jump=wiki"><span style="padding-left:16px;">LArToolObj</span></a><a title="LArUtils" href="/redmine/projects/larutils?jump=wiki"><span style="padding-left:16px;">LArUtils</span></a><a title="larwirecell" href="/redmine/projects/larwirecell?jump=wiki"><span style="padding-left:16px;">larwirecell</span></a><a title="LBNE code" href="/redmine/projects/lbnecode?jump=wiki"><span style="padding-left:16px;">LBNE code</span></a><a title="NuSystematics" href="/redmine/projects/nusystematics?jump=wiki"><span style="padding-left:16px;">NuSystematics</span></a><a title="parsegdml" href="/redmine/projects/parsegdml?jump=wiki"><span style="padding-left:16px;">parsegdml</span></a><a title="uBooNE code" href="/redmine/projects/uboonecode?jump=wiki"><span style="padding-left:16px;">uBooNE code</span></a><a title="CC1pi" href="/redmine/projects/cc1pi?jump=wiki"><span style="padding-left:32px;">CC1pi</span></a><a title="UBooNE alg" href="/redmine/projects/uboonealg?jump=wiki"><span style="padding-left:32px;">UBooNE alg</span></a><a title="uBAna" href="/redmine/projects/ubana?jump=wiki"><span style="padding-left:32px;">uBAna</span></a><a title="uBCRT" href="/redmine/projects/ubcrt?jump=wiki"><span style="padding-left:32px;">uBCRT</span></a><a title="uBCV" href="/redmine/projects/ubcv?jump=wiki"><span style="padding-left:32px;">uBCV</span></a><a title="uBCore" href="/redmine/projects/ubcore?jump=wiki"><span style="padding-left:32px;">uBCore</span></a><a title="uBEvt" href="/redmine/projects/ubevt?jump=wiki"><span style="padding-left:32px;">uBEvt</span></a><a title="uBLite" href="/redmine/projects/ublite?jump=wiki"><span style="padding-left:32px;">uBLite</span></a><a title="uBObj" href="/redmine/projects/ubobj?jump=wiki"><span style="padding-left:32px;">uBObj</span></a><a title="uBRaw" href="/redmine/projects/ubraw?jump=wiki"><span style="padding-left:32px;">uBRaw</span></a><a title="uBReco" href="/redmine/projects/ubreco?jump=wiki"><span style="padding-left:32px;">uBReco</span></a><a title="uBSim" href="/redmine/projects/ubsim?jump=wiki"><span style="padding-left:32px;">uBSim</span></a><a title="uBXSec" href="/redmine/projects/ubxsec?jump=wiki"><span style="padding-left:32px;">uBXSec</span></a><a title="lar_ci" href="/redmine/projects/lar_ci?jump=wiki"><span style="padding-left:0px;">lar_ci</span></a><a title="darkart" href="/redmine/projects/darkart?jump=wiki"><span style="padding-left:0px;">darkart</span></a><a title="darkmon" href="/redmine/projects/darkmon?jump=wiki"><span style="padding-left:0px;">darkmon</span></a><a title="darkside-public" href="/redmine/projects/darkside-public?jump=wiki"><span style="padding-left:0px;">darkside-public</span></a><a title="darksidecore" href="/redmine/projects/darksidecore?jump=wiki"><span style="padding-left:0px;">darksidecore</span></a><a title="ds50daq" href="/redmine/projects/ds50daq?jump=wiki"><span style="padding-left:0px;">ds50daq</span></a><a title="DUNE" href="/redmine/projects/dune?jump=wiki"><span style="padding-left:0px;">DUNE</span></a><a title="DUNE Approved Plots" href="/redmine/projects/dune-approved-plots?jump=wiki"><span style="padding-left:16px;">DUNE Approved Plots</span></a><a title="Dune Computing" href="/redmine/projects/dune-computing?jump=wiki"><span style="padding-left:16px;">Dune Computing</span></a><a title="duneutil" href="/redmine/projects/duneutil?jump=wiki"><span style="padding-left:32px;">duneutil</span></a><a title="DUNE DAQ" href="/redmine/projects/dune-daq?jump=wiki"><span style="padding-left:16px;">DUNE DAQ</span></a><a title="DUNE NearDet Design" href="/redmine/projects/dune-neardet-design?jump=wiki"><span style="padding-left:16px;">DUNE NearDet Design</span></a><a title="dunetpc" href="/redmine/projects/dunetpc?jump=wiki"><span style="padding-left:16px;">dunetpc</span></a><a title="protoduneana" href="/redmine/projects/protoduneana?jump=wiki"><span style="padding-left:32px;">protoduneana</span></a><a title="upd" href="/redmine/projects/upd?jump=wiki"><span style="padding-left:0px;">upd</span></a><a title="ups" href="/redmine/projects/ups?jump=wiki"><span style="padding-left:0px;">ups</span></a><a title="Fermi Redmine" href="/redmine/projects/fermi-redmine?jump=wiki"><span style="padding-left:0px;">Fermi Redmine</span></a><a title="Projects for Monitoring Redmine Health" href="/redmine/projects/test-p1?jump=wiki"><span style="padding-left:16px;">Projects for Monitoring Redmine Health</span></a><a title="redmine-lib" href="/redmine/projects/redmine-lib?jump=wiki"><span style="padding-left:16px;">redmine-lib</span></a><a title="g4hpc" href="/redmine/projects/g4hpc?jump=wiki"><span style="padding-left:0px;">g4hpc</span></a><a title="g4hpcbenchmarks" href="/redmine/projects/g4hpcbenchmarks?jump=wiki"><span style="padding-left:16px;">g4hpcbenchmarks</span></a><a title="HepPDT" href="/redmine/projects/heppdt?jump=wiki"><span style="padding-left:0px;">HepPDT</span></a><a title="ICARUS LArSoft" href="/redmine/projects/icaruscode?jump=wiki"><span style="padding-left:0px;">ICARUS LArSoft</span></a><a title="icarus_data" href="/redmine/projects/icarus_data?jump=wiki"><span style="padding-left:16px;">icarus_data</span></a><a title="icarusutil" href="/redmine/projects/icarusutil?jump=wiki"><span style="padding-left:16px;">icarusutil</span></a><a title="LAr Batch Tools" href="/redmine/projects/larbatch?jump=wiki"><span style="padding-left:0px;">LAr Batch Tools</span></a><a title="LBNE Utilities" href="/redmine/projects/lbneutil?jump=wiki"><span style="padding-left:0px;">LBNE Utilities</span></a><a title="DAQ" href="/redmine/projects/mu2edaq?jump=wiki"><span style="padding-left:0px;">DAQ</span></a><a title="mu2e_artdaq" href="/redmine/projects/mu2e_artdaq?jump=wiki"><span style="padding-left:16px;">mu2e_artdaq</span></a><a title="Mu2e DAQ Computing" href="/redmine/projects/mu2e-daq-computing?jump=wiki"><span style="padding-left:16px;">Mu2e DAQ Computing</span></a><a title="mu2e DCS" href="/redmine/projects/mu2e-dcs?jump=wiki"><span style="padding-left:16px;">mu2e DCS</span></a><a title="Mu2e Raw Data" href="/redmine/projects/mu2e-raw-data?jump=wiki"><span style="padding-left:16px;">Mu2e Raw Data</span></a><a title="Databases" href="/redmine/projects/databases?jump=wiki"><span style="padding-left:0px;">Databases</span></a><a title="Detector Construction DB" href="/redmine/projects/mu2e_detector_construction_db?jump=wiki"><span style="padding-left:16px;">Detector Construction DB</span></a><a title="Offline Software" href="/redmine/projects/offlinesoftware?jump=wiki"><span style="padding-left:0px;">Offline Software</span></a><a title="G4beamline" href="/redmine/projects/mu2eofflinesoftwareg4beamline?jump=wiki"><span style="padding-left:16px;">G4beamline</span></a><a title="Grid Scripts" href="/redmine/projects/mu2egrid?jump=wiki"><span style="padding-left:16px;">Grid Scripts</span></a><a title="Muon g-2" href="/redmine/projects/g-2?jump=wiki"><span style="padding-left:0px;">Muon g-2</span></a><a title="Calorimeter CDR req." href="/redmine/projects/calorequirements?jump=wiki"><span style="padding-left:16px;">Calorimeter CDR req.</span></a><a title="g-2 Art Examples" href="/redmine/projects/gm2artexamples?jump=wiki"><span style="padding-left:16px;">g-2 Art Examples</span></a><a title="g-2 CDR" href="/redmine/projects/gm2cdr?jump=wiki"><span style="padding-left:16px;">g-2 CDR</span></a><a title="g-2 DAQ" href="/redmine/projects/gm2daq?jump=wiki"><span style="padding-left:16px;">g-2 DAQ</span></a><a title="g-2 DQM" href="/redmine/projects/gm2dqm?jump=wiki"><span style="padding-left:32px;">g-2 DQM</span></a><a title="g-2 public" href="/redmine/projects/gm2public?jump=wiki"><span style="padding-left:16px;">g-2 public</span></a><a title="g-2 Release Tools" href="/redmine/projects/gm2releasetools?jump=wiki"><span style="padding-left:16px;">g-2 Release Tools</span></a><a title="g2MIGTRACE" href="/redmine/projects/g2migtrace?jump=wiki"><span style="padding-left:16px;">g2MIGTRACE</span></a><a title="g2mtanalysismacros" href="/redmine/projects/g2mtanalysismacros?jump=wiki"><span style="padding-left:16px;">g2mtanalysismacros</span></a><a title="g-2 SRBD" href="/redmine/projects/g-2-srbd?jump=wiki"><span style="padding-left:16px;">g-2 SRBD</span></a><a title="g-2 TDR" href="/redmine/projects/gm2tdr?jump=wiki"><span style="padding-left:16px;">g-2 TDR</span></a><a title="gm2analyses" href="/redmine/projects/gm2analyses?jump=wiki"><span style="padding-left:16px;">gm2analyses</span></a><a title="gm2aux" href="/redmine/projects/gm2aux?jump=wiki"><span style="padding-left:16px;">gm2aux</span></a><a title="gm2beams" href="/redmine/projects/gm2beams?jump=wiki"><span style="padding-left:16px;">gm2beams</span></a><a title="gm2calo" href="/redmine/projects/gm2calo?jump=wiki"><span style="padding-left:16px;">gm2calo</span></a><a title="gm2dataproducts" href="/redmine/projects/gm2dataproducts?jump=wiki"><span style="padding-left:16px;">gm2dataproducts</span></a><a title="gm2field" href="/redmine/projects/gm2field?jump=wiki"><span style="padding-left:16px;">gm2field</span></a><a title="gm2fieldanalyzer" href="/redmine/projects/gm2fieldanalyzer?jump=wiki"><span style="padding-left:32px;">gm2fieldanalyzer</span></a><a title="gm2fielddaq" href="/redmine/projects/gm2fielddaq?jump=wiki"><span style="padding-left:32px;">gm2fielddaq</span></a><a title="gm2fieldsignal" href="/redmine/projects/gm2fieldsignal?jump=wiki"><span style="padding-left:32px;">gm2fieldsignal</span></a><a title="gm2geom" href="/redmine/projects/gm2geom?jump=wiki"><span style="padding-left:16px;">gm2geom</span></a><a title="gm2mcdataproducts" href="/redmine/projects/gm2mcdataproducts?jump=wiki"><span style="padding-left:16px;">gm2mcdataproducts</span></a><a title="gm2midas" href="/redmine/projects/gm2midas?jump=wiki"><span style="padding-left:16px;">gm2midas</span></a><a title="gm2midastoart" href="/redmine/projects/gm2midastoart?jump=wiki"><span style="padding-left:16px;">gm2midastoart</span></a><a title="gm2MTest2012" href="/redmine/projects/gm2mtest2012?jump=wiki"><span style="padding-left:16px;">gm2MTest2012</span></a><a title="gm2optics" href="/redmine/projects/gm2optics?jump=wiki"><span style="padding-left:16px;">gm2optics</span></a><a title="gm2planning" href="/redmine/projects/gm2planning?jump=wiki"><span style="padding-left:16px;">gm2planning</span></a><a title="gm2reconeast" href="/redmine/projects/gm2reconeast?jump=wiki"><span style="padding-left:16px;">gm2reconeast</span></a><a title="gm2ringsim" href="/redmine/projects/gm2ringsim?jump=wiki"><span style="padding-left:16px;">gm2ringsim</span></a><a title="gm2SoftwareTools" href="/redmine/projects/gm2softwaretools?jump=wiki"><span style="padding-left:16px;">gm2SoftwareTools</span></a><a title="gm2strawtracking" href="/redmine/projects/gm2strawtracking?jump=wiki"><span style="padding-left:16px;">gm2strawtracking</span></a><a title="gm2swdocs" href="/redmine/projects/gm2swdocs?jump=wiki"><span style="padding-left:16px;">gm2swdocs</span></a><a title="gm2test" href="/redmine/projects/gm2test?jump=wiki"><span style="padding-left:16px;">gm2test</span></a><a title="gm2tracker" href="/redmine/projects/gm2tracker?jump=wiki"><span style="padding-left:16px;">gm2tracker</span></a><a title="gm2trackerdaq" href="/redmine/projects/gm2trackerdaq?jump=wiki"><span style="padding-left:16px;">gm2trackerdaq</span></a><a title="gm2unpackers" href="/redmine/projects/gm2unpackers?jump=wiki"><span style="padding-left:16px;">gm2unpackers</span></a><a title="gm2util" href="/redmine/projects/gm2util?jump=wiki"><span style="padding-left:16px;">gm2util</span></a><a title="gm2viz" href="/redmine/projects/gm2viz?jump=wiki"><span style="padding-left:16px;">gm2viz</span></a><a title="gm2vtk" href="/redmine/projects/gm2vtk?jump=wiki"><span style="padding-left:16px;">gm2vtk</span></a><a title="g-2 Field Shimming Paper" href="/redmine/projects/gm2fsp?jump=wiki"><span style="padding-left:16px;">g-2 Field Shimming Paper</span></a><a title="gm2db" href="/redmine/projects/gm2db?jump=wiki"><span style="padding-left:16px;">gm2db</span></a><a title="gm2ilratio" href="/redmine/projects/gm2ilratio?jump=wiki"><span style="padding-left:16px;">gm2ilratio</span></a><a title="gm2reconita" href="/redmine/projects/gm2reconita?jump=wiki"><span style="padding-left:16px;">gm2reconita</span></a><a title="gm2sc" href="/redmine/projects/gm2sc?jump=wiki"><span style="padding-left:16px;">gm2sc</span></a><a title="gm2simvalidation" href="/redmine/projects/gm2simvalidation?jump=wiki"><span style="padding-left:16px;">gm2simvalidation</span></a><a title="gm2templates" href="/redmine/projects/gm2templates?jump=wiki"><span style="padding-left:16px;">gm2templates</span></a><a title="NOvA-ART" href="/redmine/projects/novaart?jump=wiki"><span style="padding-left:0px;">NOvA-ART</span></a><a title="NOvA validation" href="/redmine/projects/nova-validation?jump=wiki"><span style="padding-left:16px;">NOvA validation</span></a><a title="NuTools" href="/redmine/projects/nutools?jump=wiki"><span style="padding-left:0px;">NuTools</span></a><a title="NuEvdb" href="/redmine/projects/nuevdb?jump=wiki"><span style="padding-left:16px;">NuEvdb</span></a><a title="NuG4" href="/redmine/projects/nug4?jump=wiki"><span style="padding-left:16px;">NuG4</span></a><a title="NuGen" href="/redmine/projects/nugen?jump=wiki"><span style="padding-left:16px;">NuGen</span></a><a title="NuRandom" href="/redmine/projects/nurandom?jump=wiki"><span style="padding-left:16px;">NuRandom</span></a><a title="NuSimData" href="/redmine/projects/nusimdata?jump=wiki"><span style="padding-left:16px;">NuSimData</span></a><a title="NuSoft/NuTools" href="/redmine/projects/nusoftart?jump=wiki"><span style="padding-left:16px;">NuSoft/NuTools</span></a><a title="PPFX" href="/redmine/projects/ppfx?jump=wiki"><span style="padding-left:16px;">PPFX</span></a><a title="OSG-Geant4-OSGMM" href="/redmine/projects/osg-geant4-osgmm?jump=wiki"><span style="padding-left:0px;">OSG-Geant4-OSGMM</span></a><a title="SBND code" href="/redmine/projects/sbndcode?jump=wiki"><span style="padding-left:0px;">SBND code</span></a><a title="SBND utility scripts" href="/redmine/projects/sbndutil?jump=wiki"><span style="padding-left:0px;">SBND utility scripts</span></a><a title="IF Data Handling Client Tools (ifdhc)" href="/redmine/projects/ifdhc?jump=wiki"><span style="padding-left:0px;">IF Data Handling Client Tools (ifdhc)</span></a><a title="IFDH Art interface" href="/redmine/projects/ifdh-art?jump=wiki"><span style="padding-left:16px;">IFDH Art interface</span></a><a title="Simulation Tools and Features" href="/redmine/projects/stf?jump=wiki"><span style="padding-left:0px;">Simulation Tools and Features</span></a><a title="artg4tk" href="/redmine/projects/artg4tk?jump=wiki"><span style="padding-left:16px;">artg4tk</span></a><a title="DoSSiER" href="/redmine/projects/dossier?jump=wiki"><span style="padding-left:16px;">DoSSiER</span></a><a title="Geant4Reweight" href="/redmine/projects/geant4reweight?jump=wiki"><span style="padding-left:16px;">Geant4Reweight</span></a><a title="uBooNE Reconstruction" href="/redmine/projects/uboone-reconstruction?jump=wiki"><span style="padding-left:0px;">uBooNE Reconstruction</span></a><a title="uBooNE Utilities" href="/redmine/projects/ubutil?jump=wiki"><span style="padding-left:0px;">uBooNE Utilities</span></a><a title="detsim.fnal.gov" href="/redmine/projects/detsim-fnal-gov?jump=wiki"><span style="padding-left:0px;">detsim.fnal.gov</span></a><a title="SoftRelTools" href="/redmine/projects/softreltools?jump=wiki"><span style="padding-left:0px;">SoftRelTools</span></a><a title="Spack Infrastructure" href="/redmine/projects/spack-infrastructure?jump=wiki"><span style="padding-left:0px;">Spack Infrastructure</span></a></div><div class="drdn-items all-projects selection"><a href="/redmine/projects?jump=wiki">All Projects</a></div></div></div>
    </div>

    <h1><span class="current-project">LArSoft</span></h1>

    <div id="main-menu" class="tabs">
        <ul><li>
<a id="new-object" onclick="toggleNewObjectDropdown(); return false;" class="new-object" href="#"> + </a>
<ul class="menu-children"><li><a accesskey="7" class="new-issue-sub" href="/redmine/projects/larsoft/issues/new">New issue</a></li><li><a class="new-issue-category" href="/redmine/projects/larsoft/issue_categories/new">New category</a></li><li><a class="new-version" href="/redmine/projects/larsoft/versions/new">New version</a></li><li><a class="new-timelog" href="/redmine/projects/larsoft/time_entries/new">Log time</a></li><li><a class="new-document" href="/redmine/projects/larsoft/documents/new">New document</a></li><li><a class="new-wiki-page" href="/redmine/projects/larsoft/wiki/new">New wiki page</a></li><li><a class="new-file" href="/redmine/projects/larsoft/files/new">New file</a></li></ul>
</li><li><a class="overview" href="/redmine/projects/larsoft">Overview</a></li><li><a class="activity" href="/redmine/projects/larsoft/activity">Activity</a></li><li><a class="roadmap" href="/redmine/projects/larsoft/roadmap">Roadmap</a></li><li><a class="issues" href="/redmine/projects/larsoft/issues">Issues</a></li><li><a class="time-entries" href="/redmine/projects/larsoft/time_entries">Spent time</a></li><li><a class="gantt" href="/redmine/projects/larsoft/issues/gantt">Gantt</a></li><li><a class="calendar" href="/redmine/projects/larsoft/issues/calendar">Calendar</a></li><li><a class="documents" href="/redmine/projects/larsoft/documents">Documents</a></li><li><a class="wiki selected" href="/redmine/projects/larsoft/wiki">Wiki</a></li><li><a class="files" href="/redmine/projects/larsoft/files">Files</a></li><li><a class="repository" href="/redmine/projects/larsoft/repository">Repository</a></li><li><a class="settings" href="/redmine/projects/larsoft/settings">Settings</a></li></ul>
        <div class="tabs-buttons" style="display:none;">
            <button class="tab-left" onclick="moveTabLeft(this); return false;"></button>
            <button class="tab-right" onclick="moveTabRight(this); return false;"></button>
        </div>
    </div>
</div>

<div id="main" class="">
    <div id="sidebar">
          
<h3>Wiki</h3>
<ul>
  <li><a href="/redmine/projects/larsoft/wiki">Start page</a></li>
  <li><a href="/redmine/projects/larsoft/wiki/index">Index by title</a></li>
  <li><a href="/redmine/projects/larsoft/wiki/date_index">Index by date</a></li>
</ul>


        
    </div>

    <div id="content">
        
        <div class="contextual">
<a class="icon icon-add" data-remote="true" href="/redmine/projects/larsoft/wiki/new">New wiki page</a>
  <a class="icon icon-edit" accesskey="e" href="/redmine/projects/larsoft/wiki/The_rules_and_guidelines/edit">Edit</a>
  <a class="wiki_page-12587-watcher icon icon-fav-off" data-remote="true" rel="nofollow" data-method="post" href="/redmine/watchers/watch?object_id=12587&amp;object_type=wiki_page">Watch</a>
  <a class="icon icon-lock" rel="nofollow" data-method="post" href="/redmine/projects/larsoft/wiki/The_rules_and_guidelines/protect?protected=1">Lock</a>
  
  <a class="icon icon-move" href="/redmine/projects/larsoft/wiki/The_rules_and_guidelines/rename">Rename</a>
  <a data-confirm="Are you sure?" class="icon icon-del" rel="nofollow" data-method="delete" href="/redmine/projects/larsoft/wiki/The_rules_and_guidelines">Delete</a>
<a class="icon icon-history" href="/redmine/projects/larsoft/wiki/The_rules_and_guidelines/history">History</a>
</div>

<p class="breadcrumb"><a href="/redmine/projects/larsoft/wiki/LArSoftWiki">LArSoftWiki</a> » <a href="/redmine/projects/larsoft/wiki/Developing_With_LArSoft">Developing With LArSoft</a> » </p>


<div class="wiki wiki-page">
  <ul class="toc"><li><strong>Table of contents</strong></li><li><a href="#The-rules-and-guidelines">The rules and guidelines</a><ul><li><a href="#Writing-modular-code-that-is-detector-agnostic">Writing modular code that is detector-agnostic.</a></li><li><a href="#Configuration">Configuration</a></li><li><a href="#Coding-Conventions">Coding Conventions</a></li><li><a href="#Uniform-code-format">Uniform code format</a><ul><li><a href="#Prerequisites">Prerequisites</a></li><li><a href="#Supported-editors">Supported editors</a></li><li><a href="#Expected-behavior">Expected behavior</a></li></ul>
</li><li><a href="#File-and-Library-Naming">File and Library Naming</a></li><li><a href="#Other-sources-of-useful-C-practices-and-hints">Other sources of useful C++ practices and hints</a></li><li><a href="#Good-code-writing-examples">Good code writing examples</a><ul><li><a href="#Looping-over-geometry-entities">Looping over geometry entities</a></li><li><a href="#Using-transient-data">Using transient data</a></li></ul>
</li><li><a href="#Bad-code-examples">Bad code examples</a></li><li><a href="#Enforcing-LArSoft-coding-standards">Enforcing LArSoft coding standards</a></li></ul></li></ul>


	<a name="The-rules-and-guidelines"></a>
<h1  class="wiki-class-count">The rules and guidelines<a href="#The-rules-and-guidelines" class="wiki-anchor">&para;</a></h1>


	<p>This is a working set of rules and guidelines. Suggestions for improvements are welcomed. Basically,  we urge lean, modular code that is detector-agnostic. LArSoft code is intended to be usable by any N-plane, N_w wires, M-PMT Liquid Argon TPC.</p>


	<div class="contextual heading-2" title="Edit this section" id="section-2"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/The_rules_and_guidelines/edit?section=2">Edit this section</a></div><a name="Writing-modular-code-that-is-detector-agnostic"></a>
<h2  class="wiki-class-count">Writing modular code that is detector-agnostic.<a href="#Writing-modular-code-that-is-detector-agnostic" class="wiki-anchor">&para;</a></h2>


	<ol>
	<li>All data formats which are a) stored in the output file, b) passed between job control modules or c) written to <code>histos.root</code> should be generalizable for N wire planes and / or M PMTs. Obviously, the number of wires N_w per plane must be generalizable.
	<ul>
	<li>No fixed size arrays for things that relate to planes, wires, PMTs, number of TPCs.</li>
		<li>No “Induction” and “Collection” data members in base classes for reconstruction or simulation. (For usability it is acceptable to have <code>GetCollectionPlane()</code> and <code>GetInductionPlane()</code> as methods of the class to return, for example, the first and last wire plane). One can test whether a plane is induction or collection using the <a href="http://nusoft.fnal.gov/larsoft/doxsvn/html/classgeo_1_1GeometryCore.html" class="external">Geometry interface</a> already, <a href="http://nusoft.fnal.gov/larsoft/doxsvn/html/classgeo_1_1PlaneGeo.html#afee6843450e4e10af008a8dbce02d7b3" class="external"><code>geo::PlaneGeo::SignalType()</code></a>, so if you have a plane number you can ask the Geometry if it is induction or collection.</li>
		<li>No hard-coded assumptions in data containers about positions, spacings, etc. That information should only come from the Geometry, as is stated in the Geometry package documentation.</li>
	</ul>
	</li>
		<li>An example of something that breaks from the N+M generalizability guideline is the front end electronics simulation. That will be specific to a given detector. So for that simulation it is ok, but still not great practice and certainly not to be encouraged.  That is the last step of the simulation.  But, in the Geant4 and all other parts of the simulation, keep it detector agnostic. </li>
		<li>All reconstruction code should be written as generally as possible.  Setting up the data ready to be processed should be done for N planes.  Output should be given for N planes.  Actually developing the algorithm to run for N planes may be more difficult – in this case, the package developer should:
	<ul>
	<li>write as much of their code module as possible for N planes - always vectors, never arrays! Getting this information from the Geometry is the way to do this – i.e. one gets the number of planes from the Geometry and write your loops based on that. See code snippets in the <a class="wiki-page" href="#Looping-over-geometry-entities">“Good” example</a> for how to do this.</li>
		<li>indicate with comments the start and end of the 2-plane specific section of code, and check for 2 planes and throw an exception if necessary. Never write code that assumes a hard coded number of planes. When in doubt of whether such code can be written, contact the conveners for guidance. We believe that using the Geometry methods such an exception to protocol should never be necessary. One unfortunate case may be inherited, legacy code whose cleanup is being deferred to the very busy original author.</li>
	</ul>
	</li>
		<li>Wire position and pitch and PMT position and orientation should be read only from the geometry file.  Anywhere where a specific configuration is required should be checked for in the code with clear exceptions thrown if necessary, and detailed on the wiki.</li>
	</ol>


	<div class="contextual heading-2" title="Edit this section" id="section-3"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/The_rules_and_guidelines/edit?section=3">Edit this section</a></div><a name="Configuration"></a>
<h2  class="wiki-class-count">Configuration<a href="#Configuration" class="wiki-anchor">&para;</a></h2>


	<p>All LArSoft users are expected to follow the guidelines for developing configurations and configuration-aware C++ code as described at <a class="external" href="http://larsoft.org/configuration/">http://larsoft.org/configuration/</a> which includes two presentations, one with video.</p>


	<div class="contextual heading-2" title="Edit this section" id="section-4"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/The_rules_and_guidelines/edit?section=4">Edit this section</a></div><a name="Coding-Conventions"></a>
<h2  class="wiki-class-count">Coding Conventions<a href="#Coding-Conventions" class="wiki-anchor">&para;</a></h2>


	<p>Conventions to keep in mind when writing code for LArSoft include the following:</p>


	<ol>
	<li>Namespaces must be explicit, no <code>using namespace XXX</code> statements are allowed.</li>
		<li>All packages are a namespace; the names of the namespaces should be kept to 5 letters or less and should indicate the package, i.e. <code>evd</code> for the EventDisplay package.</li>
		<li>Data members of an object should have variable names that begin with <code>f</code>, i.e., <code>fADC</code>.</li>
		<li>Variable names should be reasonably descriptive for the scope in which they are used - <code>i</code> is ok in a small for loop, not ok in one spanning 20 lines or more.</li>
		<li>Typedefs for predefined types are discouraged, i.e. <code>typedef int Int_t</code>, <code>typedef std::vector&lt;double&gt; dubvec</code>. Typedefs should be reserved for legitimate new types, i.e., <code>Origin_t</code> in <code>SimulationBase/MCTruth.h</code>.</li>
		<li><strong>Comments are mandatory</strong> - each new object should have a description of its purpose in the header file.</li>
		<li>Comments should be of a format that enables <a href="http://www.stack.nl/~dimitri/doxygen/docblocks.html" class="external">doxygen</a> to interpret them.</li>
		<li>Use the <a href="https://cdcvs.fnal.gov/redmine/projects/messagefacility/wiki/Using_MessageFacility" class="external">message facility</a> (see also its <a href="https://cdcvs.fnal.gov/redmine/projects/messagefacility/wiki/Tutorial_for_MessageFacility_v12_Configuration" class="external">configuration tutorial</a>) for output to the screen.</li>
		<li>Non-module classes should use consistent header and implementation file names, e.g., al algorithm implemented in class <code>MyAlgo</code> should be written into <code>MyAlgo.h</code> and <code>MyAlgo.cxx</code>.</li>
		<li>Module types and file names should be consistent. For example, a module named <code>MyModule</code> should be declared, defined, and implemented in <code>MyModule_module.cc</code>.</li>
		<li>Include statements should use full paths to header files, where the full path to any LArSoft header is everything up to, but not including, the top level of the repository (e.g., <code>#include "larcore/Geometry/GeometryCore.h"</code>).</li>
		<li>Only use TObject subclasses when absolutely required since it can result in considerable and unnecessary memory and CPU overheads.</li>
		<li>All for and if statements should be followed by explicit braces. Failure to do so can cause trouble with maintenance.</li>
		<li>Data products should be selected using art::InputTag values whenever possible.</li>
		<li>Creation and filling of TTrees should be confined to a separate analyzer module that is used for debugging only. While embedded TTrees for diagnostic purposed is valuable in developing new algorithm code, these should be removed from production code.</li>
		<li>Whenever possible, use constexpr instead of static const and avoid using non-const statics since they are a source of inefficiency in multi-threaded code.</li>
	</ol>


	<div class="contextual heading-2" title="Edit this section" id="section-5"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/The_rules_and_guidelines/edit?section=5">Edit this section</a></div><a name="Uniform-code-format"></a>
<h2  class="wiki-class-count">Uniform code format<a href="#Uniform-code-format" class="wiki-anchor">&para;</a></h2>


	<p>LArSoft is considering adopting <code>clang-format</code> as a code-formatting tool to ensure a uniform code layout.  Although <code>clang-format</code> can be made available by explicitly setting up the <code>clang</code> UPS product, the recommended way of using <code>clang-format</code> is to integrate it into your editor.</p>


	<div class="contextual heading-3" title="Edit this section" id="section-6"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/The_rules_and_guidelines/edit?section=6">Edit this section</a></div><a name="Prerequisites"></a>
<h3  class="wiki-class-count">Prerequisites<a href="#Prerequisites" class="wiki-anchor">&para;</a></h3>


	<p>To use the UPS-provided <code>clang-format</code> utility inside the editors, it is necessary that UPS is setup for your file-editing session.  If UPS has been setup, then you should see the following when typed in your shell:</p>


<pre>
type ups &gt;&#38; /dev/null &#38;&#38; echo UPS available
UPS available
</pre>

	<p>If UPS is not found or Clang 7 is not installed in the UPS area, then you will not have access to the <code>clang-format</code> commands within the editors.</p>


	<div class="contextual heading-3" title="Edit this section" id="section-7"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/The_rules_and_guidelines/edit?section=7">Edit this section</a></div><a name="Supported-editors"></a>
<h3  class="wiki-class-count">Supported editors<a href="#Supported-editors" class="wiki-anchor">&para;</a></h3>


	<ul>
	<li><strong>Emacs</strong>
	<ul>
	<li>Download <a class="attachment" href="/redmine/attachments/63864/ups-clang-format-v7.el">ups-clang-format-v7.el</a> and place it in a directory <code>&lt;my_dir&gt;</code>.</li>
		<li>Add the following commands to your .emacs file: <pre>(add-to-list 'load-path "&lt;my_dir&gt;")
(load "ups-clang-format-v7")</pre>This will allow you to use the <code>'M-x clang-format-buffer'</code> and <code>'M-x clang-format-region'</code> commands while editing files.</li>
	</ul></li>
	</ul>


	<ul>
	<li><strong>VIM</strong>
	<ul>
	<li>Download <a class="attachment" href="/redmine/attachments/61597/ups-clang-format-v7.vim">ups-clang-format-v7.vim</a> and place it in your <code>~/.vim/plugin/</code> subdirectory.</li>
		<li>You can then use <code>'Ctrl-k'</code> while editing files to apply <code>clang-format</code> to the selected line or region.</li>
	</ul></li>
	</ul>


	<div class="contextual heading-3" title="Edit this section" id="section-8"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/The_rules_and_guidelines/edit?section=8">Edit this section</a></div><a name="Expected-behavior"></a>
<h3  class="wiki-class-count">Expected behavior<a href="#Expected-behavior" class="wiki-anchor">&para;</a></h3>


	<p>For the files being edited, the <code>clang-format</code> commands will use the <code>.clang-format</code> file that is closest to the file.  In other words, assume a file has the full path:</p>


<pre>
/dir1/dir2/dir3/my_file.cpp
</pre>

	<p>and that each of the directories <code>dir1</code>, <code>dir2</code>, and <code>dir3</code> have <code>.clang-format</code> files.  <code>clang-format</code> will choose the <code>.clang-format</code> file located in <code>dir3</code> as the style to apply to the code in <code>my_file.cpp</code>.  If <code>dir3</code> does not have a <code>.clang-format</code> file, then <code>clang-format</code> will search for  a <code>.clang-format</code> file in <code>dir2</code>, and so on.  If a <code>.clang-format</code> file cannot be found in the directory hierarchy, then <code>clang-format</code> applies its own default.</p>


	<div class="contextual heading-2" title="Edit this section" id="section-9"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/The_rules_and_guidelines/edit?section=9">Edit this section</a></div><a name="File-and-Library-Naming"></a>
<h2  class="wiki-class-count"> File and Library Naming<a href="#File-and-Library-Naming" class="wiki-anchor">&para;</a></h2>


	<p>The problem of conflicting names can arise when developing code against multiple experiment repositories (e.g., <code>argoneutcode</code>, <code>lariatsoft</code>, <code>uboonecode</code>, <code>dunetpc</code>, etc.).  In order to facilitate being able to develop in a multiple experiment environment, it is helpful if the experiments use unique naming for classes, headers, libraries, and fcl files.</p>


	<ol>
	<li>In the case of headers, the header path is considered part of the header name and should always be used in the include directive.<br /><pre><code class="cpp syntaxhl"><span class="CodeRay"><span class="preprocessor">#include</span> <span class="include">&quot;uboone/OpticalDetectorSim/RandomServer.h&quot;</span> <span class="comment">// uboonecode</span>
<span class="preprocessor">#include</span> <span class="include">&quot;dune/Geometry/ChannelMap35Alg.h&quot;</span> <span class="comment">// dunetpc</span>
<span class="preprocessor">#include</span> <span class="include">&quot;MCShowerReco/MCShower.h&quot;</span> <span class="comment">// argoneutcode</span></span></code></pre></li>
		<li>Classes should have a unique name.  Namespaces (e.g., <code>uboone</code>, <code>dune</code>, <code>argoevd</code>) may be used to create a unique name, but it is safer to rely on the name of the class itself.</li>
		<li>We require including the path in library names in LArSoft to ensure unique naming (e.g., <code>libart_Persistency_Common.so</code> rather than just <code>libCommon.so</code>).
	<ul>
	<li><code>art_make()</code> will do this by default</li>
		<li>The use of <code>BASENAME_ONLY</code> with <code>art_make()</code> is not allowed in LArSoft. We <em>strongly</em> recommend experiment code follow the same practice.</li>
		<li>If <code>USE_PRODUCT_NAME</code> is specified, the UPS product name (e.g., <code>dunetpc</code>) will be prepended to the calculated library name</li>
	</ul>
	</li>
		<li>Since the path is not used to reference FHiCL files, we request that the experiments take care to indicate the experiment in the names of their FHiCL files.
	<ul>
	<li>good FHiCL file naming:<br /><pre>prodgenie_common_uboone.fcl
evd_ub.fcl
detsimmodules_microboone.fcl
standard_ana_dune35t.fcl
dune35t_buildopticallibrary_test.fcl</pre></li>
		<li>problematic FHiCL file naming:<br /><pre>copy.fcl
ana.fcl
rawevd.fcl
anatree.fcl (used to appear in at least two different experiments)</pre></li>
	</ul>
	</li>
		<li>Avoid common names, such as <code>version</code>.  Instead use <code>mypackage_version</code>.</li>
	</ol>


	<div class="contextual heading-2" title="Edit this section" id="section-10"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/The_rules_and_guidelines/edit?section=10">Edit this section</a></div><a name="Other-sources-of-useful-C-practices-and-hints"></a>
<h2  class="wiki-class-count">Other sources of useful C++ practices and hints<a href="#Other-sources-of-useful-C-practices-and-hints" class="wiki-anchor">&para;</a></h2>


	<p>The ARTists have provided a nice set of "good practices" for coding that also include some hints on newer C++ standard (2011, 2014...).  Please read this <a href="https://cdcvs.fnal.gov/redmine/documents/534" class="external">document</a>.</p>


	<p>CMS has a very useful set of notes about <a href="https://twiki.cern.ch/twiki/bin/view/CMSPublic/FWMultithreadedThreadSafeDataStructures" class="external">Using Data Structures Safely with Threads</a>.</p>


	<div class="contextual heading-2" title="Edit this section" id="section-11"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/The_rules_and_guidelines/edit?section=11">Edit this section</a></div><a name="Good-code-writing-examples"></a>
<h2  class="wiki-class-count">Good code writing examples<a href="#Good-code-writing-examples" class="wiki-anchor">&para;</a></h2>


	<div class="contextual heading-3" title="Edit this section" id="section-12"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/The_rules_and_guidelines/edit?section=12">Edit this section</a></div><a name="Looping-over-geometry-entities"></a>
<h3  class="wiki-class-count">Looping over geometry entities<a href="#Looping-over-geometry-entities" class="wiki-anchor">&para;</a></h3>


<pre><code class="cpp syntaxhl"><span class="CodeRay"><span class="comment">// For each plane, do something on the hits on that plane</span>
std::vector&lt;recob::Hit&gt; const&#38; hits = *hitHandle;
<span class="directive">auto</span> <span class="directive">const</span>* geom = lar::providerFrom&lt;geo::Geometry&gt;();
<span class="comment">// iterates through all planes in the detector (all TPCs!)</span>
<span class="keyword">for</span> (geo::PlaneID const&#38; pid: geom-&gt;IteratePlaneIDs()) {
  std::vector&lt;recob::Hit <span class="directive">const</span>*&gt; hitsOnPlane;
  <span class="keyword">for</span> (recob::Hit const&#38; hit: hits) {
    <span class="keyword">if</span> (hit.WireID().planeID() != pid) <span class="keyword">continue</span>;
    hitsOnPlane.push_back(&#38;hit);
  } <span class="comment">// for hits</span>
  geo::View_t view = geom-&gt;View(pid); <span class="comment">// this is the view in this plane</span>
  <span class="comment">// do something</span>
} <span class="comment">// for planes</span>
</span></code></pre>

	<div class="contextual heading-3" title="Edit this section" id="section-13"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/The_rules_and_guidelines/edit?section=13">Edit this section</a></div><a name="Using-transient-data"></a>
<h3  class="wiki-class-count">Using transient data<a href="#Using-transient-data" class="wiki-anchor">&para;</a></h3>


	<p><em>Transient data</em> is data that is specific to a given event but it is not saved into the event record. For example, results of an algorithm that need to be translated into LArSoft data products are transient.</p>


	<p>Transient data <em>should be local</em>, and even if conditions force it to be a data member of a class, they should be emptied <strong>at the end of each event</strong> rather than at the beginning. Otherwise, you are carrying your now useless transient data across the whole job, wasting memory.</p>


	<p>Let's assume we have an algorithm whose workflow is split in different phases: initialisation, run and result retrieval.<br /><pre><code class="cpp syntaxhl"><span class="CodeRay"><span class="keyword">class</span> <span class="class">MyProducer</span>: <span class="directive">public</span> art::EDProducer {

  std::unique_ptr&lt;MyAlgorithm&gt; myAlgo;
  <span class="comment">// ...</span>

};

<span class="directive">void</span> MyProducer::produce(art::Event&#38; event) {

  <span class="comment">// configure the algorithm, provide it inputs...</span>

  <span class="comment">// run the algorithm</span>
  myAlgo-&gt;run();

  <span class="comment">// retrieve the results (may be more than just one collection)</span>
  std::vector&lt;recob::Vertex&gt; vertices;
  myAlgo-&gt;getVertices(vertices);

  <span class="comment">// move the results into the event</span>
  event.put(std::make_unique&lt;std::vector&lt;recob::Vertex&gt;&gt;(std::move(vertices)));

} <span class="comment">// MyProducer::produce()</span></span></code></pre><br />This requires the algorithm to keep the results until they are retrieved.<br />To implement correctly the algorithm, there are two main options, plus a "backup" one:</p>


	<ol>
	<li>every method returning results also removes them from the object; the best way to implement this is actually merging the run and result retrieval phases:<br />  <pre><code class="cpp syntaxhl"><span class="CodeRay"><span class="keyword">class</span> <span class="class">MyAlgorithm</span> {

      <span class="directive">public</span>:
    <span class="keyword">struct</span> Results_t {
      std::vector&lt;recob::Vertex&gt; vertices; <span class="comment">///&lt; result: vertices</span>
      <span class="comment">// ...</span>
    };

    results_t run() <span class="directive">const</span>
      {
        Results_t results;
        <span class="comment">// fill the results by executing the algorithm code</span>
        <span class="keyword">return</span> results;
      }

    <span class="comment">//...</span>

  } <span class="comment">// class MyAlgorithm</span></span></code></pre><br />  with a <code>produce()</code> like:<br />  <pre><code class="cpp syntaxhl"><span class="CodeRay"><span class="directive">void</span> MyProducer::produce(art::Event&#38; event) {

    <span class="comment">// configure the algorithm, provide it inputs...</span>

    <span class="comment">// run the algorithm</span>
    <span class="directive">auto</span> results = myAlgo-&gt;run();

    <span class="comment">// move the results into the event</span>
    event.put
      (std::make_unique&lt;std::vector&lt;recob::Vertex&gt;&gt;(std::move(results.vertices)));

  } <span class="comment">// MyProducer::produce()</span></span></code></pre><br />  If there is only one result, the <code>Results_t</code> data structure is optional.<br />  This solution allows avoiding copies of the result(s).<br />  The following variant keeps the two phases separate:<br />  <pre><code class="cpp syntaxhl"><span class="CodeRay"><span class="keyword">class</span> <span class="class">MyAlgorithm</span> {
      <span class="directive">public</span>:
    <span class="keyword">struct</span> Results_t {
      std::vector&lt;recob::Vertex&gt; vertices; <span class="comment">///&lt; result: vertices</span>
      <span class="comment">// ...</span>
    };

    <span class="directive">void</span> run();

    Results_t getResults() { <span class="keyword">return</span> std::move(results); }

    <span class="comment">//...</span>
      <span class="directive">private</span>:
    Results_t results;
  } <span class="comment">// class MyAlgorithm</span></span></code></pre><br />  This still presents memory hoarding if the caller decides not to <code>getResults()</code>, and it gives wrong results if <code>getResults()</code> is called more than once. For these reasons, it is disfavoured respect to the first variant.</li>
		<li>require the caller to clear the data when done:<br />  <pre><code class="cpp syntaxhl"><span class="CodeRay"><span class="keyword">class</span> <span class="class">MyAlgorithm</span> {

    std::vector&lt;recob::Vertex&gt; vertices; <span class="comment">///&lt; result: vertices</span>

      <span class="directive">public</span>:
    std::vector&lt;recob::Vertex&gt; const&#38; getVertices() <span class="directive">const</span>
      { <span class="keyword">return</span> vertices; }

    <span class="directive">void</span> clear()
      { vertices.clear(); <span class="comment">/* ... */</span> }

    <span class="comment">// ...</span>

  } <span class="comment">// class MyAlgorithm</span></span></code></pre><br />    paired with a different version of <code>produce()</code>:<br />    <pre><code class="cpp syntaxhl"><span class="CodeRay"><span class="directive">void</span> MyProducer::produce(art::Event&#38; event) {

    <span class="comment">// configure the algorithm, provide it inputs...</span>

    <span class="comment">// run the algorithm</span>
    myAlgo-&gt;run();

    <span class="comment">// retrieve the results (may be more than just one collection)</span>
    std::vector&lt;recob::Vertex&gt; const&#38; vertices = myAlgo-&gt;getVertices();

    <span class="comment">// move the results into the event</span>
    event.put(std::make_unique&lt;std::vector&lt;recob::Vertex&gt;&gt;(vertices));

    myAlgo-&gt;clear();

  } <span class="comment">// MyProducer::produce()</span></span></code></pre><br />  The main weakness of this approach is that it can't verify that the caller actually @clear()@ed the data, and it is therefore <em>not recommended</em>.<br />  Note that this will <em>not</em> avoid a copy of the vertices, since the <em>art</em> producer will be forced to create a copy to be entrusted to the event.</li>
		<li>if the algorithm does not allow this approach, one can instantiate the algorithm on every event anew; this is typically not that expensive, and since the algorithm is automatically destroyed after each event, no hoarding is possible: <br />  <pre><code class="cpp syntaxhl"><span class="CodeRay"><span class="directive">void</span> MyProducer::produce(art::Event&#38; event) {

    <span class="comment">// construct and configure the algorithm, provide it inputs...</span>
    MyAlgorithm myAlgo;

    <span class="comment">// run the algorithm, do whatever it takes to get the results out of it</span>
    myAlgo.run();

    <span class="comment">// retrieve the results (may be more than just one collection)</span>
    std::vector&lt;recob::Vertex&gt; vertices;
    myAlgo.getVertices(vertices);

    <span class="comment">// move the results into the event</span>
    event.put(std::make_unique&lt;std::vector&lt;recob::Vertex&gt;&gt;(std::move(vertices)));

  } <span class="comment">// MyProducer::produce()</span></span></code></pre><br />  </code></pre></li>
	</ol>


	<p>Example of <strong>wrong</strong> behavior:<br /><pre><code class="cpp syntaxhl"><span class="CodeRay"><span class="directive">void</span> MyProducer::produce(art::Event&#38; event) {

  <span class="comment">// configure the algorithm, provide it inputs...</span>

  <span class="comment">// run the algorithm</span>
  myAlgo-&gt;run();

  <span class="comment">// retrieve the results (may be more than just one collection)</span>
  std::vector&lt;recob::Vertex&gt; const&#38; vertices = myAlgo-&gt;getVertices();

  <span class="comment">// move the results into the event</span>
  event.put(std::make_unique&lt;std::vector&lt;recob::Vertex&gt;&gt;(vertices));

} <span class="comment">// MyProducer::produce()</span></span></code></pre><br />This is the wrong implementation of the option 2, where we do not instruct the algorithm to clear its results, even if it is very likely that the algorithm is still retaining a copy of them.</p>


	<div class="contextual heading-2" title="Edit this section" id="section-14"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/The_rules_and_guidelines/edit?section=14">Edit this section</a></div><a name="Bad-code-examples"></a>
<h2  class="wiki-class-count">Bad code examples<a href="#Bad-code-examples" class="wiki-anchor">&para;</a></h2>


	<ol>
	<li>It should never be necessary to know the specific detector we are working on. If you think you need to, please should check with a convener/peer to see if there’s a more elegant alternative.<br /><pre><code class="cpp syntaxhl"><span class="CodeRay"><span class="directive">auto</span> <span class="directive">const</span>* geom = lar::providerFrom&lt;geo::Geometry&gt;();
<span class="keyword">if</span> (geom-&gt;DetectorName() == <span class="string"><span class="delimiter">&quot;</span><span class="content">ArgoNeuT</span><span class="delimiter">&quot;</span></span>) {
  <span class="comment">// Do the desired specific ArgoNeuT thing here to get detector constants, e.g.</span>
}
</span></code></pre><br />To get configuration for a specific detector, services should be used that are configured for that detector.</li>
		<li>no hard-coded numbers! these belong to a FHiCL configuration file<br /><pre><code class="cpp syntaxhl"><span class="CodeRay"><span class="comment">// Oi!</span>
  <span class="predefined-type">double</span> plane_pitch = <span class="float">0</span><span class="float">.3</span>;   <span class="comment">//wire plane pitch in cm </span>
  <span class="predefined-type">double</span> wire_pitch = <span class="float">0</span><span class="float">.3</span>;    <span class="comment">//wire pitch in cm</span>
  <span class="predefined-type">double</span> Efield_SI = <span class="float">0</span><span class="float">.8</span>;   <span class="comment">// Electric Field between Shield and Induction planes in kV/cm</span>
  <span class="predefined-type">double</span> Efield_IC = <span class="float">0</span><span class="float">.65</span>;     <span class="comment">// Electric Field between Induction and Collection</span>
</span></code></pre></li>
		<li>This is also bad (and at the end of this bad example we show a more correct approach):<br /><pre><code class="cpp syntaxhl"><span class="CodeRay"><span class="comment">// This first bit is fine ....</span>
<span class="directive">auto</span> <span class="directive">const</span> channel = theWire-&gt;Channel();    
<span class="directive">auto</span> <span class="directive">const</span>* geom = lar::providerFrom&lt;geo::Geometry&gt;();
<span class="directive">auto</span> wireIDs = geom-&gt;ChannelToWire(channel); <span class="comment">// note that there might be more wires read by the same readout channel</span>
<span class="directive">auto</span> const&#38; wireID = wireIDs-&gt;at(<span class="integer">0</span>);
  <span class="comment">// ... But here, we go off the rails.</span>
<span class="comment">//correct for the distance between wire planes</span>
<span class="keyword">if</span>      (wireID.Plane == <span class="integer">0</span>) time -= tI;         <span class="comment">// Induction</span>
<span class="keyword">else</span> <span class="keyword">if</span> (wireID.Plane == <span class="integer">1</span>) time -= (tI+tC); <span class="comment">// Collection</span>
<span class="comment">// Bit below is especially odious ...</span>
<span class="keyword">switch</span> (wireID.Plane) {
  <span class="keyword">case</span> <span class="integer">0</span>:
    IclusHitlists.push_back(hitlist);
    <span class="keyword">break</span>;
  <span class="keyword">case</span> <span class="integer">1</span>:     
    CclusHitlists.push_back(hitlist);
    <span class="keyword">break</span>;   
} <span class="comment">// switch</span>
</span></pre></code><br />This is how this snippet should look like instead:<br /> <pre><code class="cpp syntaxhl"><span class="CodeRay"><span class="directive">auto</span> <span class="directive">const</span>* geom = lar::providerFrom&lt;geo::Geometry&gt;();
<span class="directive">auto</span> <span class="directive">const</span> signalType = geom-&gt;SignalType(theWire-&gt;Channel());
<span class="keyword">switch</span> (signalType) {
  <span class="keyword">case</span> geo::kInduction:
    time -= tI;
    IclusHitlists.push_back(hitlist);
    <span class="keyword">break</span>;
  <span class="keyword">case</span> geo::kCollection:
    time -= (tI+tC);
    CclusHitlists.push_back(hitlist);
    <span class="keyword">break</span>;
  <span class="keyword">default</span>:
    <span class="keyword">throw</span> art::Exception(art::errors::LogicError) &lt;&lt; <span class="string"><span class="delimiter">&quot;</span><span class="content">Unexpected signal type!</span><span class="char">\n</span><span class="delimiter">&quot;</span></span>;   
} <span class="comment">// switch</span>
</span></code></pre><br />That is: use the right abstraction (here, signal type and channel, instead of wire and plane number), and rely on the geometry service to map readout and geometry.</li>
	</ol>


	<div class="contextual heading-2" title="Edit this section" id="section-15"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/The_rules_and_guidelines/edit?section=15">Edit this section</a></div><a name="Enforcing-LArSoft-coding-standards"></a>
<h2  class="wiki-class-count">Enforcing LArSoft coding standards<a href="#Enforcing-LArSoft-coding-standards" class="wiki-anchor">&para;</a></h2>


	<p>We value your contributions. We are all physicists and not computer scientists. We want everyone to be able to walk in and contribute to LArSoft. Nevertheless, your LArSoft co-conveners have decided some words are in order regarding coding conventions. We run unit tests, and experiments can run regression tests (through the Continuous Integration), and we want more. No one has volunteered to spend the many hours necessary to vet the code of contributors and make it conform to the proper rules and aesthetics. Our use of Code Analysis and  spot checks and urging and individual follow-up will continue as much as time allows.</p>


	<p>Mechanism for enforcement of violators is loose. The most serious route toward urging re-examining of your code that may be in violation of the tenants listed is through a discussion with the appropriate experiment spokesperson. Only eventually, in extreme cases and as a last resort, will repeat offenders of the codified rules be locked out of the repository. But, it could happen. Please do your best to follow the rules. See example code snippets on this page and code throughout the repository to guide you.</p></pre>
</div>


<fieldset class="collapsible collapsed hide-when-print">
  <legend onclick="toggleFieldset(this);">Files (2)</legend>
  <div style="display: none;">

  <div class="attachments">
<div class="contextual">
  <a title="Edit attached files" class="icon-only icon-edit" href="/redmine/attachments/wiki_pages/12587/edit">Edit attached files</a>
</div>
<table>
<tr>
  <td>
    <a class="icon icon-attachment" href="/redmine/attachments/61597/ups-clang-format-v7.vim">ups-clang-format-v7.vim</a>    <span class="size">(342 Bytes)</span>
    <a class="icon-only icon-download" title="Download" href="/redmine/attachments/download/61597/ups-clang-format-v7.vim">ups-clang-format-v7.vim</a>  </td>
  <td></td>
  <td>
      <span class="author">Kyle Knoepfel, 11/10/2020 03:09 PM</span>
  </td>
  <td>
      <a data-confirm="Are you sure?" class="delete icon-only icon-del" title="Delete" rel="nofollow" data-method="delete" href="/redmine/attachments/61597">Delete</a>
  </td>
</tr>
<tr>
  <td>
    <a class="icon icon-attachment" href="/redmine/attachments/63864/ups-clang-format-v7.el">ups-clang-format-v7.el</a>    <span class="size">(499 Bytes)</span>
    <a class="icon-only icon-download" title="Download" href="/redmine/attachments/download/63864/ups-clang-format-v7.el">ups-clang-format-v7.el</a>  </td>
  <td></td>
  <td>
      <span class="author">Kyle Knoepfel, 04/28/2021 01:31 PM</span>
  </td>
  <td>
      <a data-confirm="Are you sure?" class="delete icon-only icon-del" title="Delete" rel="nofollow" data-method="delete" href="/redmine/attachments/63864">Delete</a>
  </td>
</tr>
</table>
</div>

  
  <div id="wiki_add_attachment">
    <form id="add_attachment_form" enctype="multipart/form-data" action="/redmine/projects/larsoft/wiki/The_rules_and_guidelines/add_attachment" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="DtiW6LrGwAOkKlCKHc4jbnicBfbMs0GTJ2JRKch4Gi7kNnJ1Ols8db1dv1PXI3d5EcXeAldHgNdern9ywo1Fmg==" />
      <div class="box">
      <p>
<span class="attachments_form">
  <span class="attachments_fields">
  </span>
  <span class="add_attachment" style="">
    <input type="file" name="attachments[dummy][file]" class="file_selector filedrop" multiple="multiple" onchange="addInputFiles(this);" data-max-file-size="419430400" data-max-file-size-message="This file cannot be uploaded because it exceeds the maximum allowed file size (400 MB)" data-max-concurrent-uploads="2" data-upload-path="/redmine/uploads.js" data-param="attachments" data-description="true" data-description-placeholder="Optional description" />
    (Maximum size: 400 MB)
  </span>
</span>

</p>
      </div>
      <input type="submit" name="commit" value="Add" />
</form>  </div>
</div>
</fieldset>

<p class="other-formats">Also available in:  <span><a class="pdf" rel="nofollow" href="/redmine/projects/larsoft/wiki/The_rules_and_guidelines.pdf">PDF</a></span>
  <span><a class="html" rel="nofollow" href="/redmine/projects/larsoft/wiki/The_rules_and_guidelines.html">HTML</a></span>
  <span><a class="txt" rel="nofollow" href="/redmine/projects/larsoft/wiki/The_rules_and_guidelines.txt">TXT</a></span>
</p>


        
        <div style="clear:both;"></div>
    </div>
</div>
</div>

<div id="ajax-indicator" style="display:none;"><span>Loading...</span></div>
<div id="ajax-modal" style="display:none;"></div>

<div id="footer">
  <div class="bgl"><div class="bgr">
    Powered by <a href="https://www.redmine.org/">Redmine</a> &copy; 2006-2019 Jean-Philippe Lang
  </div></div>
</div>
</div>
</div>

</body>
</html>
