<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<title>Writing LArSoft service - LArSoft - Fermilab Redmine</title>
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<meta name="description" content="Redmine" />
<meta name="keywords" content="issue,bug,tracker" />
<meta name="csrf-param" content="authenticity_token" />
<meta name="csrf-token" content="PtJ6paX14W+UyJS/irY83F3tS4x3QjZIWGsiE7gnHJHUPJ44JWgdGY2/e2ZAW2jLNLSQeOy29wwhpwxIstJDJQ==" />
<link rel='shortcut icon' href='/redmine/favicon.ico?1560171137' />
<link rel="stylesheet" media="all" href="/redmine/stylesheets/jquery/jquery-ui-1.11.0.css?1601072361" />
<link rel="stylesheet" media="all" href="/redmine/stylesheets/application.css?1601072361" />
<link rel="stylesheet" media="all" href="/redmine/stylesheets/responsive.css?1601072360" />

<script src="/redmine/javascripts/jquery-1.11.1-ui-1.11.0-ujs-3.1.4.js?1601072362"></script>
<script src="/redmine/javascripts/application.js?1601072361"></script>
<script src="/redmine/javascripts/responsive.js?1601072360"></script>
<script>
//<![CDATA[
$(window).load(function(){ warnLeavingUnsaved('The current page contains unsaved text that will be lost if you leave this page.'); });
//]]>
</script>

<link rel="stylesheet" media="screen" href="/redmine/plugin_assets/redmine_countable_headers/stylesheets/countable_headers.css?1604432132" />  <script src="/redmine/plugin_assets/redmine_sortable_table/javascripts/sortable_table.js?1601318223"></script><link rel="stylesheet" media="screen" href="/redmine/plugin_assets/redmine_sortable_table/stylesheets/sortable_table.css?1601318223" /> <link rel="stylesheet" media="screen" href="/redmine/plugin_assets/redmine_group_assignee/stylesheets/tab_content_assignees.css?1604592738" />
<!-- page specific tags -->
  <script src="/redmine/javascripts/attachments.js?1601072363"></script>
</head>
<body class="project-larsoft controller-wiki action-show">

<div id="wrapper">

<div class="flyout-menu js-flyout-menu">


        <div class="flyout-menu__search">
            <form action="/redmine/projects/larsoft/search" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
            <input type="hidden" name="wiki_pages" value="1" />
            <label class="search-magnifier search-magnifier--flyout" for="flyout-search">&#9906;</label>
            <input type="text" name="q" id="flyout-search" class="small js-search-input" placeholder="Search" />
</form>        </div>

        <div class="flyout-menu__avatar flyout-menu__avatar--no-avatar">
            <a class="user active" href="/redmine/users/7">garren</a>
        </div>

        <h3>Project</h3>
        <span class="js-project-menu"></span>

    <h3>General</h3>
    <span class="js-general-menu"></span>

    <span class="js-sidebar flyout-menu__sidebar"></span>

    <h3>Profile</h3>
    <span class="js-profile-menu"></span>

</div>

<div id="wrapper2">
<div id="wrapper3">
<div id="top-menu">
    <div id="account">
        <ul><li><a class="my-account" href="/redmine/my/account">My account</a></li><li><a class="logout" rel="nofollow" data-method="post" href="/redmine/logout">Sign out</a></li></ul>    </div>
    <div id="loggedas">Logged in as <a class="user active" href="/redmine/users/7">garren</a></div>
    <ul><li><a class="home" href="/redmine/">Home</a></li><li><a class="my-page" href="/redmine/my/page">My page</a></li><li><a class="projects" href="/redmine/projects">Projects</a></li><li><a class="help" href="https://www.redmine.org/guide">Help</a></li></ul></div>

<div id="header">

    <a href="#" class="mobile-toggle-button js-flyout-menu-toggle-button"></a>

    <div id="quick-search">
        <form action="/redmine/projects/larsoft/search" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
        <input type="hidden" name="scope" value="subprojects" />
        <input type="hidden" name="wiki_pages" value="1" />
        <label for='q'>
          <a accesskey="4" href="/redmine/projects/larsoft/search?scope=subprojects">Search</a>:
        </label>
        <input type="text" name="q" id="q" size="20" class="small" accesskey="f" />
</form>        <div id="project-jump" class="drdn"><span class="drdn-trigger">LArSoft</span><div class="drdn-content"><div class="quick-search"><input type="text" name="q" id="projects-quick-search" value="" class="autocomplete" data-automcomplete-url="/redmine/projects/autocomplete.js?jump=wiki" autocomplete="off" /></div><div class="drdn-items projects selection"><a title="Accelerator Modeling" href="/redmine/projects/accelerator-modeling?jump=wiki"><span style="padding-left:0px;">Accelerator Modeling</span></a><a title="ArgoNeuT Offline" href="/redmine/projects/t962offline?jump=wiki"><span style="padding-left:0px;">ArgoNeuT Offline</span></a><a title="artdaq" href="/redmine/projects/artdaq?jump=wiki"><span style="padding-left:0px;">artdaq</span></a><a title="artdaq Demo" href="/redmine/projects/artdaq-demo?jump=wiki"><span style="padding-left:16px;">artdaq Demo</span></a><a title="artdaq Core Demo" href="/redmine/projects/artdaq-core-demo?jump=wiki"><span style="padding-left:32px;">artdaq Core Demo</span></a><a title="artdaq Utilities" href="/redmine/projects/artdaq-utilities?jump=wiki"><span style="padding-left:16px;">artdaq Utilities</span></a><a title="artdaq database" href="/redmine/projects/artdaq-database?jump=wiki"><span style="padding-left:32px;">artdaq database</span></a><a title="artdaq-mfextensions" href="/redmine/projects/mf-extensions?jump=wiki"><span style="padding-left:16px;">artdaq-mfextensions</span></a><a title="artg4" href="/redmine/projects/artg4?jump=wiki"><span style="padding-left:0px;">artg4</span></a><a title="artg4 Geant N02 example" href="/redmine/projects/artg4geantn02?jump=wiki"><span style="padding-left:16px;">artg4 Geant N02 example</span></a><a title="artg4example" href="/redmine/projects/artg4example?jump=wiki"><span style="padding-left:16px;">artg4example</span></a><a title="cet-is" href="/redmine/projects/cet-is?jump=wiki"><span style="padding-left:0px;">cet-is</span></a><a title="art" href="/redmine/projects/art?jump=wiki"><span style="padding-left:16px;">art</span></a><a title="art Hough" href="/redmine/projects/art-hough?jump=wiki"><span style="padding-left:32px;">art Hough</span></a><a title="art-workbook" href="/redmine/projects/art-workbook?jump=wiki"><span style="padding-left:32px;">art-workbook</span></a><a title="art_root_io" href="/redmine/projects/art_root_io?jump=wiki"><span style="padding-left:32px;">art_root_io</span></a><a title="artExtensions" href="/redmine/projects/artextensions?jump=wiki"><span style="padding-left:16px;">artExtensions</span></a><a title="Systematics Tools" href="/redmine/projects/systematicstools?jump=wiki"><span style="padding-left:32px;">Systematics Tools</span></a><a title="artUtilScripts" href="/redmine/projects/artutilscripts?jump=wiki"><span style="padding-left:16px;">artUtilScripts</span></a><a title="canvas" href="/redmine/projects/canvas?jump=wiki"><span style="padding-left:16px;">canvas</span></a><a title="canvas_root_io" href="/redmine/projects/canvas_root_io?jump=wiki"><span style="padding-left:32px;">canvas_root_io</span></a><a title="cet-is-private" href="/redmine/projects/cet-is-private?jump=wiki"><span style="padding-left:16px;">cet-is-private</span></a><a title="cet-is-public" href="/redmine/projects/cet-is-public?jump=wiki"><span style="padding-left:16px;">cet-is-public</span></a><a title="cetbuildtools" href="/redmine/projects/cetbuildtools?jump=wiki"><span style="padding-left:16px;">cetbuildtools</span></a><a title="cetlib" href="/redmine/projects/cetlib?jump=wiki"><span style="padding-left:16px;">cetlib</span></a><a title="cetlib_except" href="/redmine/projects/cetlib_except?jump=wiki"><span style="padding-left:32px;">cetlib_except</span></a><a title="CetModules" href="/redmine/projects/cetmodules?jump=wiki"><span style="padding-left:16px;">CetModules</span></a><a title="cetpkgsupport" href="/redmine/projects/cetpkgsupport?jump=wiki"><span style="padding-left:16px;">cetpkgsupport</span></a><a title="Chris Green&#39;s Stuff" href="/redmine/projects/cet-chg?jump=wiki"><span style="padding-left:16px;">Chris Green&#39;s Stuff</span></a><a title="CosmoSIS UPS" href="/redmine/projects/cosmosis_ups?jump=wiki"><span style="padding-left:16px;">CosmoSIS UPS</span></a><a title="cpp0x" href="/redmine/projects/cpp0x?jump=wiki"><span style="padding-left:16px;">cpp0x</span></a><a title="critic" href="/redmine/projects/critic?jump=wiki"><span style="padding-left:16px;">critic</span></a><a title="DocDB migration" href="/redmine/projects/docdb-migration?jump=wiki"><span style="padding-left:16px;">DocDB migration</span></a><a title="El Capitan Support" href="/redmine/projects/el-capitan-support?jump=wiki"><span style="padding-left:16px;">El Capitan Support</span></a><a title="fhicl" href="/redmine/projects/fhicl?jump=wiki"><span style="padding-left:16px;">fhicl</span></a><a title="fhicl-cpp" href="/redmine/projects/fhicl-cpp?jump=wiki"><span style="padding-left:32px;">fhicl-cpp</span></a><a title="fhicl-py" href="/redmine/projects/fhicl-py?jump=wiki"><span style="padding-left:32px;">fhicl-py</span></a><a title="Framework Build Instructions" href="/redmine/projects/build-framework?jump=wiki"><span style="padding-left:16px;">Framework Build Instructions</span></a><a title="hep_hpc_toolkit" href="/redmine/projects/hep_hpc_toolkit?jump=wiki"><span style="padding-left:32px;">hep_hpc_toolkit</span></a><a title="gallery" href="/redmine/projects/gallery?jump=wiki"><span style="padding-left:16px;">gallery</span></a><a title="hep_concurrency" href="/redmine/projects/hep_concurrency?jump=wiki"><span style="padding-left:16px;">hep_concurrency</span></a><a title="Lynn Garren&#39;s notes" href="/redmine/projects/lynn-garren-s-notes?jump=wiki"><span style="padding-left:16px;">Lynn Garren&#39;s notes</span></a><a title="messagefacility" href="/redmine/projects/messagefacility?jump=wiki"><span style="padding-left:16px;">messagefacility</span></a><a title="mrb" href="/redmine/projects/mrb?jump=wiki"><span style="padding-left:16px;">mrb</span></a><a title="SciSoft" href="/redmine/projects/scisoft?jump=wiki"><span style="padding-left:16px;">SciSoft</span></a><a title="Spack Planning" href="/redmine/projects/spack-planning?jump=wiki"><span style="padding-left:16px;">Spack Planning</span></a><a title="VMs and Containers" href="/redmine/projects/vms-and-containers?jump=wiki"><span style="padding-left:16px;">VMs and Containers</span></a><a title="ubuntu vm" href="/redmine/projects/ubuntu-vm?jump=wiki"><span style="padding-left:32px;">ubuntu vm</span></a><a title="cet-pythia6" href="/redmine/projects/cet-pythia6?jump=wiki"><span style="padding-left:16px;">cet-pythia6</span></a><a title="splines" href="/redmine/projects/splines?jump=wiki"><span style="padding-left:16px;">splines</span></a><a title="studio" href="/redmine/projects/studio?jump=wiki"><span style="padding-left:16px;">studio</span></a><a title="tag_suite" href="/redmine/projects/tag_suite?jump=wiki"><span style="padding-left:16px;">tag_suite</span></a><a title="art/LArSoft Course" href="/redmine/projects/art-larsoft-course?jump=wiki"><span style="padding-left:0px;">art/LArSoft Course</span></a><a title="LArIAT" href="/redmine/projects/lardbt?jump=wiki"><span style="padding-left:0px;">LArIAT</span></a><a title="LArIAT Online" href="/redmine/projects/lariat-online?jump=wiki"><span style="padding-left:16px;">LArIAT Online</span></a><a title="LArSoft" class="selected" href="/redmine/projects/larsoft?jump=wiki"><span style="padding-left:0px;">LArSoft</span></a><a title="ArgoNeuT code" href="/redmine/projects/argoneutcode?jump=wiki"><span style="padding-left:16px;">ArgoNeuT code</span></a><a title="ArgoNeuT Analysis" href="/redmine/projects/t962ana?jump=wiki"><span style="padding-left:32px;">ArgoNeuT Analysis</span></a><a title="LAr-Continuous-Integration" href="/redmine/projects/lar-ci?jump=wiki"><span style="padding-left:16px;">LAr-Continuous-Integration</span></a><a title="LAr1ND code" href="/redmine/projects/lar1ndcode?jump=wiki"><span style="padding-left:16px;">LAr1ND code</span></a><a title="LArAdmin" href="/redmine/projects/laradmin?jump=wiki"><span style="padding-left:16px;">LArAdmin</span></a><a title="LArAna" href="/redmine/projects/larana?jump=wiki"><span style="padding-left:16px;">LArAna</span></a><a title="LArCore" href="/redmine/projects/larcore?jump=wiki"><span style="padding-left:16px;">LArCore</span></a><a title="LArCoreAlg" href="/redmine/projects/larcorealg?jump=wiki"><span style="padding-left:16px;">LArCoreAlg</span></a><a title="LArCoreObj" href="/redmine/projects/larcoreobj?jump=wiki"><span style="padding-left:16px;">LArCoreObj</span></a><a title="LArData" href="/redmine/projects/lardata?jump=wiki"><span style="padding-left:16px;">LArData</span></a><a title="LArDataAlg" href="/redmine/projects/lardataalg?jump=wiki"><span style="padding-left:16px;">LArDataAlg</span></a><a title="LArDataObj" href="/redmine/projects/lardataobj?jump=wiki"><span style="padding-left:16px;">LArDataObj</span></a><a title="LArEventDisplay" href="/redmine/projects/lareventdisplay?jump=wiki"><span style="padding-left:16px;">LArEventDisplay</span></a><a title="LArEvt" href="/redmine/projects/larevt?jump=wiki"><span style="padding-left:16px;">LArEvt</span></a><a title="LArExamples" href="/redmine/projects/larexamples?jump=wiki"><span style="padding-left:16px;">LArExamples</span></a><a title="LArG4" href="/redmine/projects/larg4?jump=wiki"><span style="padding-left:16px;">LArG4</span></a><a title="larliteintegration" href="/redmine/projects/sketch?jump=wiki"><span style="padding-left:16px;">larliteintegration</span></a><a title="LArPandora" href="/redmine/projects/larpandora?jump=wiki"><span style="padding-left:16px;">LArPandora</span></a><a title="LArPandoraContent" href="/redmine/projects/larpandoracontent?jump=wiki"><span style="padding-left:16px;">LArPandoraContent</span></a><a title="LArReco" href="/redmine/projects/larreco?jump=wiki"><span style="padding-left:16px;">LArReco</span></a><a title="LArRecoDNN" href="/redmine/projects/larrecodnn?jump=wiki"><span style="padding-left:16px;">LArRecoDNN</span></a><a title="LArRelTools" href="/redmine/projects/larreltools?jump=wiki"><span style="padding-left:16px;">LArRelTools</span></a><a title="larshoweralg" href="/redmine/projects/larshoweralg?jump=wiki"><span style="padding-left:16px;">larshoweralg</span></a><a title="LArSim" href="/redmine/projects/larsim?jump=wiki"><span style="padding-left:16px;">LArSim</span></a><a title="LArSimAlg" href="/redmine/projects/larsimalg?jump=wiki"><span style="padding-left:16px;">LArSimAlg</span></a><a title="LArSimObj" href="/redmine/projects/larsimobj?jump=wiki"><span style="padding-left:16px;">LArSimObj</span></a><a title="LArSimTools" href="/redmine/projects/larsimtools?jump=wiki"><span style="padding-left:16px;">LArSimTools</span></a><a title="LArSoft-SVN (legacy site)" href="/redmine/projects/larsoftsvn?jump=wiki"><span style="padding-left:16px;">LArSoft-SVN (legacy site)</span></a><a title="LArSoft Alpha Test" href="/redmine/projects/larsoft-alpha?jump=wiki"><span style="padding-left:32px;">LArSoft Alpha Test</span></a><a title="LArSoft Experiments Alpha Test" href="/redmine/projects/larsoft-experiment-alpha?jump=wiki"><span style="padding-left:48px;">LArSoft Experiments Alpha Test</span></a><a title="LArSoftObj" href="/redmine/projects/larsoftobj?jump=wiki"><span style="padding-left:16px;">LArSoftObj</span></a><a title="LArSystematics" href="/redmine/projects/larsystematics?jump=wiki"><span style="padding-left:16px;">LArSystematics</span></a><a title="LArTestAlg" href="/redmine/projects/lartestalg?jump=wiki"><span style="padding-left:16px;">LArTestAlg</span></a><a title="LArToolObj" href="/redmine/projects/lartoolobj?jump=wiki"><span style="padding-left:16px;">LArToolObj</span></a><a title="LArUtils" href="/redmine/projects/larutils?jump=wiki"><span style="padding-left:16px;">LArUtils</span></a><a title="larwirecell" href="/redmine/projects/larwirecell?jump=wiki"><span style="padding-left:16px;">larwirecell</span></a><a title="LBNE code" href="/redmine/projects/lbnecode?jump=wiki"><span style="padding-left:16px;">LBNE code</span></a><a title="NuSystematics" href="/redmine/projects/nusystematics?jump=wiki"><span style="padding-left:16px;">NuSystematics</span></a><a title="parsegdml" href="/redmine/projects/parsegdml?jump=wiki"><span style="padding-left:16px;">parsegdml</span></a><a title="uBooNE code" href="/redmine/projects/uboonecode?jump=wiki"><span style="padding-left:16px;">uBooNE code</span></a><a title="CC1pi" href="/redmine/projects/cc1pi?jump=wiki"><span style="padding-left:32px;">CC1pi</span></a><a title="UBooNE alg" href="/redmine/projects/uboonealg?jump=wiki"><span style="padding-left:32px;">UBooNE alg</span></a><a title="uBAna" href="/redmine/projects/ubana?jump=wiki"><span style="padding-left:32px;">uBAna</span></a><a title="uBCRT" href="/redmine/projects/ubcrt?jump=wiki"><span style="padding-left:32px;">uBCRT</span></a><a title="uBCV" href="/redmine/projects/ubcv?jump=wiki"><span style="padding-left:32px;">uBCV</span></a><a title="uBCore" href="/redmine/projects/ubcore?jump=wiki"><span style="padding-left:32px;">uBCore</span></a><a title="uBEvt" href="/redmine/projects/ubevt?jump=wiki"><span style="padding-left:32px;">uBEvt</span></a><a title="uBLite" href="/redmine/projects/ublite?jump=wiki"><span style="padding-left:32px;">uBLite</span></a><a title="uBObj" href="/redmine/projects/ubobj?jump=wiki"><span style="padding-left:32px;">uBObj</span></a><a title="uBRaw" href="/redmine/projects/ubraw?jump=wiki"><span style="padding-left:32px;">uBRaw</span></a><a title="uBReco" href="/redmine/projects/ubreco?jump=wiki"><span style="padding-left:32px;">uBReco</span></a><a title="uBSim" href="/redmine/projects/ubsim?jump=wiki"><span style="padding-left:32px;">uBSim</span></a><a title="uBXSec" href="/redmine/projects/ubxsec?jump=wiki"><span style="padding-left:32px;">uBXSec</span></a><a title="lar_ci" href="/redmine/projects/lar_ci?jump=wiki"><span style="padding-left:0px;">lar_ci</span></a><a title="darkart" href="/redmine/projects/darkart?jump=wiki"><span style="padding-left:0px;">darkart</span></a><a title="darkmon" href="/redmine/projects/darkmon?jump=wiki"><span style="padding-left:0px;">darkmon</span></a><a title="darkside-public" href="/redmine/projects/darkside-public?jump=wiki"><span style="padding-left:0px;">darkside-public</span></a><a title="darksidecore" href="/redmine/projects/darksidecore?jump=wiki"><span style="padding-left:0px;">darksidecore</span></a><a title="ds50daq" href="/redmine/projects/ds50daq?jump=wiki"><span style="padding-left:0px;">ds50daq</span></a><a title="DUNE" href="/redmine/projects/dune?jump=wiki"><span style="padding-left:0px;">DUNE</span></a><a title="DUNE Approved Plots" href="/redmine/projects/dune-approved-plots?jump=wiki"><span style="padding-left:16px;">DUNE Approved Plots</span></a><a title="Dune Computing" href="/redmine/projects/dune-computing?jump=wiki"><span style="padding-left:16px;">Dune Computing</span></a><a title="duneutil" href="/redmine/projects/duneutil?jump=wiki"><span style="padding-left:32px;">duneutil</span></a><a title="DUNE DAQ" href="/redmine/projects/dune-daq?jump=wiki"><span style="padding-left:16px;">DUNE DAQ</span></a><a title="DUNE NearDet Design" href="/redmine/projects/dune-neardet-design?jump=wiki"><span style="padding-left:16px;">DUNE NearDet Design</span></a><a title="dunetpc" href="/redmine/projects/dunetpc?jump=wiki"><span style="padding-left:16px;">dunetpc</span></a><a title="protoduneana" href="/redmine/projects/protoduneana?jump=wiki"><span style="padding-left:32px;">protoduneana</span></a><a title="upd" href="/redmine/projects/upd?jump=wiki"><span style="padding-left:0px;">upd</span></a><a title="ups" href="/redmine/projects/ups?jump=wiki"><span style="padding-left:0px;">ups</span></a><a title="Fermi Redmine" href="/redmine/projects/fermi-redmine?jump=wiki"><span style="padding-left:0px;">Fermi Redmine</span></a><a title="Projects for Monitoring Redmine Health" href="/redmine/projects/test-p1?jump=wiki"><span style="padding-left:16px;">Projects for Monitoring Redmine Health</span></a><a title="redmine-lib" href="/redmine/projects/redmine-lib?jump=wiki"><span style="padding-left:16px;">redmine-lib</span></a><a title="g4hpc" href="/redmine/projects/g4hpc?jump=wiki"><span style="padding-left:0px;">g4hpc</span></a><a title="g4hpcbenchmarks" href="/redmine/projects/g4hpcbenchmarks?jump=wiki"><span style="padding-left:16px;">g4hpcbenchmarks</span></a><a title="HepPDT" href="/redmine/projects/heppdt?jump=wiki"><span style="padding-left:0px;">HepPDT</span></a><a title="ICARUS LArSoft" href="/redmine/projects/icaruscode?jump=wiki"><span style="padding-left:0px;">ICARUS LArSoft</span></a><a title="icarus_data" href="/redmine/projects/icarus_data?jump=wiki"><span style="padding-left:16px;">icarus_data</span></a><a title="icarusutil" href="/redmine/projects/icarusutil?jump=wiki"><span style="padding-left:16px;">icarusutil</span></a><a title="LAr Batch Tools" href="/redmine/projects/larbatch?jump=wiki"><span style="padding-left:0px;">LAr Batch Tools</span></a><a title="LBNE Utilities" href="/redmine/projects/lbneutil?jump=wiki"><span style="padding-left:0px;">LBNE Utilities</span></a><a title="DAQ" href="/redmine/projects/mu2edaq?jump=wiki"><span style="padding-left:0px;">DAQ</span></a><a title="mu2e_artdaq" href="/redmine/projects/mu2e_artdaq?jump=wiki"><span style="padding-left:16px;">mu2e_artdaq</span></a><a title="Mu2e DAQ Computing" href="/redmine/projects/mu2e-daq-computing?jump=wiki"><span style="padding-left:16px;">Mu2e DAQ Computing</span></a><a title="mu2e DCS" href="/redmine/projects/mu2e-dcs?jump=wiki"><span style="padding-left:16px;">mu2e DCS</span></a><a title="Mu2e Raw Data" href="/redmine/projects/mu2e-raw-data?jump=wiki"><span style="padding-left:16px;">Mu2e Raw Data</span></a><a title="Databases" href="/redmine/projects/databases?jump=wiki"><span style="padding-left:0px;">Databases</span></a><a title="Detector Construction DB" href="/redmine/projects/mu2e_detector_construction_db?jump=wiki"><span style="padding-left:16px;">Detector Construction DB</span></a><a title="Offline Software" href="/redmine/projects/offlinesoftware?jump=wiki"><span style="padding-left:0px;">Offline Software</span></a><a title="G4beamline" href="/redmine/projects/mu2eofflinesoftwareg4beamline?jump=wiki"><span style="padding-left:16px;">G4beamline</span></a><a title="Grid Scripts" href="/redmine/projects/mu2egrid?jump=wiki"><span style="padding-left:16px;">Grid Scripts</span></a><a title="Muon g-2" href="/redmine/projects/g-2?jump=wiki"><span style="padding-left:0px;">Muon g-2</span></a><a title="Calorimeter CDR req." href="/redmine/projects/calorequirements?jump=wiki"><span style="padding-left:16px;">Calorimeter CDR req.</span></a><a title="g-2 Art Examples" href="/redmine/projects/gm2artexamples?jump=wiki"><span style="padding-left:16px;">g-2 Art Examples</span></a><a title="g-2 CDR" href="/redmine/projects/gm2cdr?jump=wiki"><span style="padding-left:16px;">g-2 CDR</span></a><a title="g-2 DAQ" href="/redmine/projects/gm2daq?jump=wiki"><span style="padding-left:16px;">g-2 DAQ</span></a><a title="g-2 DQM" href="/redmine/projects/gm2dqm?jump=wiki"><span style="padding-left:32px;">g-2 DQM</span></a><a title="g-2 public" href="/redmine/projects/gm2public?jump=wiki"><span style="padding-left:16px;">g-2 public</span></a><a title="g-2 Release Tools" href="/redmine/projects/gm2releasetools?jump=wiki"><span style="padding-left:16px;">g-2 Release Tools</span></a><a title="g2MIGTRACE" href="/redmine/projects/g2migtrace?jump=wiki"><span style="padding-left:16px;">g2MIGTRACE</span></a><a title="g2mtanalysismacros" href="/redmine/projects/g2mtanalysismacros?jump=wiki"><span style="padding-left:16px;">g2mtanalysismacros</span></a><a title="g-2 SRBD" href="/redmine/projects/g-2-srbd?jump=wiki"><span style="padding-left:16px;">g-2 SRBD</span></a><a title="g-2 TDR" href="/redmine/projects/gm2tdr?jump=wiki"><span style="padding-left:16px;">g-2 TDR</span></a><a title="gm2analyses" href="/redmine/projects/gm2analyses?jump=wiki"><span style="padding-left:16px;">gm2analyses</span></a><a title="gm2aux" href="/redmine/projects/gm2aux?jump=wiki"><span style="padding-left:16px;">gm2aux</span></a><a title="gm2beams" href="/redmine/projects/gm2beams?jump=wiki"><span style="padding-left:16px;">gm2beams</span></a><a title="gm2calo" href="/redmine/projects/gm2calo?jump=wiki"><span style="padding-left:16px;">gm2calo</span></a><a title="gm2dataproducts" href="/redmine/projects/gm2dataproducts?jump=wiki"><span style="padding-left:16px;">gm2dataproducts</span></a><a title="gm2field" href="/redmine/projects/gm2field?jump=wiki"><span style="padding-left:16px;">gm2field</span></a><a title="gm2fieldanalyzer" href="/redmine/projects/gm2fieldanalyzer?jump=wiki"><span style="padding-left:32px;">gm2fieldanalyzer</span></a><a title="gm2fielddaq" href="/redmine/projects/gm2fielddaq?jump=wiki"><span style="padding-left:32px;">gm2fielddaq</span></a><a title="gm2fieldsignal" href="/redmine/projects/gm2fieldsignal?jump=wiki"><span style="padding-left:32px;">gm2fieldsignal</span></a><a title="gm2geom" href="/redmine/projects/gm2geom?jump=wiki"><span style="padding-left:16px;">gm2geom</span></a><a title="gm2mcdataproducts" href="/redmine/projects/gm2mcdataproducts?jump=wiki"><span style="padding-left:16px;">gm2mcdataproducts</span></a><a title="gm2midas" href="/redmine/projects/gm2midas?jump=wiki"><span style="padding-left:16px;">gm2midas</span></a><a title="gm2midastoart" href="/redmine/projects/gm2midastoart?jump=wiki"><span style="padding-left:16px;">gm2midastoart</span></a><a title="gm2MTest2012" href="/redmine/projects/gm2mtest2012?jump=wiki"><span style="padding-left:16px;">gm2MTest2012</span></a><a title="gm2optics" href="/redmine/projects/gm2optics?jump=wiki"><span style="padding-left:16px;">gm2optics</span></a><a title="gm2planning" href="/redmine/projects/gm2planning?jump=wiki"><span style="padding-left:16px;">gm2planning</span></a><a title="gm2reconeast" href="/redmine/projects/gm2reconeast?jump=wiki"><span style="padding-left:16px;">gm2reconeast</span></a><a title="gm2ringsim" href="/redmine/projects/gm2ringsim?jump=wiki"><span style="padding-left:16px;">gm2ringsim</span></a><a title="gm2SoftwareTools" href="/redmine/projects/gm2softwaretools?jump=wiki"><span style="padding-left:16px;">gm2SoftwareTools</span></a><a title="gm2strawtracking" href="/redmine/projects/gm2strawtracking?jump=wiki"><span style="padding-left:16px;">gm2strawtracking</span></a><a title="gm2swdocs" href="/redmine/projects/gm2swdocs?jump=wiki"><span style="padding-left:16px;">gm2swdocs</span></a><a title="gm2test" href="/redmine/projects/gm2test?jump=wiki"><span style="padding-left:16px;">gm2test</span></a><a title="gm2tracker" href="/redmine/projects/gm2tracker?jump=wiki"><span style="padding-left:16px;">gm2tracker</span></a><a title="gm2trackerdaq" href="/redmine/projects/gm2trackerdaq?jump=wiki"><span style="padding-left:16px;">gm2trackerdaq</span></a><a title="gm2unpackers" href="/redmine/projects/gm2unpackers?jump=wiki"><span style="padding-left:16px;">gm2unpackers</span></a><a title="gm2util" href="/redmine/projects/gm2util?jump=wiki"><span style="padding-left:16px;">gm2util</span></a><a title="gm2viz" href="/redmine/projects/gm2viz?jump=wiki"><span style="padding-left:16px;">gm2viz</span></a><a title="gm2vtk" href="/redmine/projects/gm2vtk?jump=wiki"><span style="padding-left:16px;">gm2vtk</span></a><a title="g-2 Field Shimming Paper" href="/redmine/projects/gm2fsp?jump=wiki"><span style="padding-left:16px;">g-2 Field Shimming Paper</span></a><a title="gm2db" href="/redmine/projects/gm2db?jump=wiki"><span style="padding-left:16px;">gm2db</span></a><a title="gm2ilratio" href="/redmine/projects/gm2ilratio?jump=wiki"><span style="padding-left:16px;">gm2ilratio</span></a><a title="gm2reconita" href="/redmine/projects/gm2reconita?jump=wiki"><span style="padding-left:16px;">gm2reconita</span></a><a title="gm2sc" href="/redmine/projects/gm2sc?jump=wiki"><span style="padding-left:16px;">gm2sc</span></a><a title="gm2simvalidation" href="/redmine/projects/gm2simvalidation?jump=wiki"><span style="padding-left:16px;">gm2simvalidation</span></a><a title="gm2templates" href="/redmine/projects/gm2templates?jump=wiki"><span style="padding-left:16px;">gm2templates</span></a><a title="NOvA-ART" href="/redmine/projects/novaart?jump=wiki"><span style="padding-left:0px;">NOvA-ART</span></a><a title="NOvA validation" href="/redmine/projects/nova-validation?jump=wiki"><span style="padding-left:16px;">NOvA validation</span></a><a title="NuTools" href="/redmine/projects/nutools?jump=wiki"><span style="padding-left:0px;">NuTools</span></a><a title="NuEvdb" href="/redmine/projects/nuevdb?jump=wiki"><span style="padding-left:16px;">NuEvdb</span></a><a title="NuG4" href="/redmine/projects/nug4?jump=wiki"><span style="padding-left:16px;">NuG4</span></a><a title="NuGen" href="/redmine/projects/nugen?jump=wiki"><span style="padding-left:16px;">NuGen</span></a><a title="NuRandom" href="/redmine/projects/nurandom?jump=wiki"><span style="padding-left:16px;">NuRandom</span></a><a title="NuSimData" href="/redmine/projects/nusimdata?jump=wiki"><span style="padding-left:16px;">NuSimData</span></a><a title="NuSoft/NuTools" href="/redmine/projects/nusoftart?jump=wiki"><span style="padding-left:16px;">NuSoft/NuTools</span></a><a title="PPFX" href="/redmine/projects/ppfx?jump=wiki"><span style="padding-left:16px;">PPFX</span></a><a title="OSG-Geant4-OSGMM" href="/redmine/projects/osg-geant4-osgmm?jump=wiki"><span style="padding-left:0px;">OSG-Geant4-OSGMM</span></a><a title="SBND code" href="/redmine/projects/sbndcode?jump=wiki"><span style="padding-left:0px;">SBND code</span></a><a title="SBND utility scripts" href="/redmine/projects/sbndutil?jump=wiki"><span style="padding-left:0px;">SBND utility scripts</span></a><a title="IF Data Handling Client Tools (ifdhc)" href="/redmine/projects/ifdhc?jump=wiki"><span style="padding-left:0px;">IF Data Handling Client Tools (ifdhc)</span></a><a title="IFDH Art interface" href="/redmine/projects/ifdh-art?jump=wiki"><span style="padding-left:16px;">IFDH Art interface</span></a><a title="Simulation Tools and Features" href="/redmine/projects/stf?jump=wiki"><span style="padding-left:0px;">Simulation Tools and Features</span></a><a title="artg4tk" href="/redmine/projects/artg4tk?jump=wiki"><span style="padding-left:16px;">artg4tk</span></a><a title="DoSSiER" href="/redmine/projects/dossier?jump=wiki"><span style="padding-left:16px;">DoSSiER</span></a><a title="Geant4Reweight" href="/redmine/projects/geant4reweight?jump=wiki"><span style="padding-left:16px;">Geant4Reweight</span></a><a title="uBooNE Reconstruction" href="/redmine/projects/uboone-reconstruction?jump=wiki"><span style="padding-left:0px;">uBooNE Reconstruction</span></a><a title="uBooNE Utilities" href="/redmine/projects/ubutil?jump=wiki"><span style="padding-left:0px;">uBooNE Utilities</span></a><a title="detsim.fnal.gov" href="/redmine/projects/detsim-fnal-gov?jump=wiki"><span style="padding-left:0px;">detsim.fnal.gov</span></a><a title="SoftRelTools" href="/redmine/projects/softreltools?jump=wiki"><span style="padding-left:0px;">SoftRelTools</span></a><a title="Spack Infrastructure" href="/redmine/projects/spack-infrastructure?jump=wiki"><span style="padding-left:0px;">Spack Infrastructure</span></a></div><div class="drdn-items all-projects selection"><a href="/redmine/projects?jump=wiki">All Projects</a></div></div></div>
    </div>

    <h1><span class="current-project">LArSoft</span></h1>

    <div id="main-menu" class="tabs">
        <ul><li>
<a id="new-object" onclick="toggleNewObjectDropdown(); return false;" class="new-object" href="#"> + </a>
<ul class="menu-children"><li><a accesskey="7" class="new-issue-sub" href="/redmine/projects/larsoft/issues/new">New issue</a></li><li><a class="new-issue-category" href="/redmine/projects/larsoft/issue_categories/new">New category</a></li><li><a class="new-version" href="/redmine/projects/larsoft/versions/new">New version</a></li><li><a class="new-timelog" href="/redmine/projects/larsoft/time_entries/new">Log time</a></li><li><a class="new-document" href="/redmine/projects/larsoft/documents/new">New document</a></li><li><a class="new-wiki-page" href="/redmine/projects/larsoft/wiki/new">New wiki page</a></li><li><a class="new-file" href="/redmine/projects/larsoft/files/new">New file</a></li></ul>
</li><li><a class="overview" href="/redmine/projects/larsoft">Overview</a></li><li><a class="activity" href="/redmine/projects/larsoft/activity">Activity</a></li><li><a class="roadmap" href="/redmine/projects/larsoft/roadmap">Roadmap</a></li><li><a class="issues" href="/redmine/projects/larsoft/issues">Issues</a></li><li><a class="time-entries" href="/redmine/projects/larsoft/time_entries">Spent time</a></li><li><a class="gantt" href="/redmine/projects/larsoft/issues/gantt">Gantt</a></li><li><a class="calendar" href="/redmine/projects/larsoft/issues/calendar">Calendar</a></li><li><a class="documents" href="/redmine/projects/larsoft/documents">Documents</a></li><li><a class="wiki selected" href="/redmine/projects/larsoft/wiki">Wiki</a></li><li><a class="files" href="/redmine/projects/larsoft/files">Files</a></li><li><a class="repository" href="/redmine/projects/larsoft/repository">Repository</a></li><li><a class="settings" href="/redmine/projects/larsoft/settings">Settings</a></li></ul>
        <div class="tabs-buttons" style="display:none;">
            <button class="tab-left" onclick="moveTabLeft(this); return false;"></button>
            <button class="tab-right" onclick="moveTabRight(this); return false;"></button>
        </div>
    </div>
</div>

<div id="main" class="">
    <div id="sidebar">
          
<h3>Wiki</h3>
<ul>
  <li><a href="/redmine/projects/larsoft/wiki">Start page</a></li>
  <li><a href="/redmine/projects/larsoft/wiki/index">Index by title</a></li>
  <li><a href="/redmine/projects/larsoft/wiki/date_index">Index by date</a></li>
</ul>


        
    </div>

    <div id="content">
        
        <div class="contextual">
<a class="icon icon-add" data-remote="true" href="/redmine/projects/larsoft/wiki/new">New wiki page</a>
  <a class="icon icon-edit" accesskey="e" href="/redmine/projects/larsoft/wiki/Writing_LArSoft_service/edit">Edit</a>
  <a class="wiki_page-17224-watcher icon icon-fav-off" data-remote="true" rel="nofollow" data-method="post" href="/redmine/watchers/watch?object_id=17224&amp;object_type=wiki_page">Watch</a>
  <a class="icon icon-lock" rel="nofollow" data-method="post" href="/redmine/projects/larsoft/wiki/Writing_LArSoft_service/protect?protected=1">Lock</a>
  
  <a class="icon icon-move" href="/redmine/projects/larsoft/wiki/Writing_LArSoft_service/rename">Rename</a>
  <a data-confirm="Are you sure?" class="icon icon-del" rel="nofollow" data-method="delete" href="/redmine/projects/larsoft/wiki/Writing_LArSoft_service">Delete</a>
<a class="icon icon-history" href="/redmine/projects/larsoft/wiki/Writing_LArSoft_service/history">History</a>
</div>

<p class="breadcrumb"><a href="/redmine/projects/larsoft/wiki/LArSoftWiki">LArSoftWiki</a> » <a href="/redmine/projects/larsoft/wiki/Developing_With_LArSoft">Developing With LArSoft</a> » </p>


<div class="wiki wiki-page">
  <ul class="toc right"><li><strong>Table of contents</strong></li><li><a href="#Guidelines-on-writing-and-using-services-in-LArSoft">Guidelines on writing (and using) services in LArSoft</a><ul><li><a href="#Models-for-writing-services">Models for writing services</a><ul><li><a href="#Service-interface-with-many-implementations-eg-experiment-specific">Service interface with many implementations (e.g., experiment-specific)</a></li><li><a href="#Service-factorization-model">Service factorization model</a></li><li><a href="#Service-interface-factorization-eg-experiment-specific-framework-independent-service-implementations">Service interface factorization (e.g., experiment-specific, framework-independent service implementations)</a></li></ul>
</li><li><a href="#Prescriptions-for-the-use-of-LArSoft-services">Prescriptions for the use of LArSoft services</a><ul><li><a href="#Naming-conventions">Naming conventions</a></li></ul>
</li><li><a href="#Developing-a-new-LArSoft-service">Developing a new LArSoft service</a><ul><li><a href="#Lazy-provider-instantiation">Lazy provider instantiation</a></li><li><a href="#Service-dependencies">Service dependencies</a><ul><li><a href="#Updating-services-and-service-dependencies">Updating services and service dependencies</a></li></ul>
</li><li><a href="#Multi-threading-support">Multi-threading support</a></li></ul></li></ul></li></ul>


	<p><span style="font-style: italic;font-weight: bolder;background: orange;">Full examples are available in <code>larexamples</code> repositories, extensively commented. You can also access that from <a href="http://nusoft.fnal.gov/larsoft/doxsvn/html/group__larexamples__Services.html" class="external">LArSoft Doxygen pages</a>.</span></p>


	<a name="Guidelines-on-writing-and-using-services-in-LArSoft"></a>
<h1 >Guidelines on writing (and using) services in LArSoft<a href="#Guidelines-on-writing-and-using-services-in-LArSoft" class="wiki-anchor">&para;</a></h1>


	<p>A LArSoft service is a class, with a single instance managed by the framework, that performs an operation. A service is used by LArSoft algorithms and <em>art</em> modules.</p>


In the context of the <em>art</em> framework, a service is implemented as a class with the following requirements:
	<ol>
	<li>special macros are used to declare and then define factory functions and other things specific to <em>art</em></li>
		<li>an implementation file name that follows a pattern like <code>MyService_service.cc</code> </li>
		<li>a constructor is available with a specific signature, like<pre><code class="cpp syntaxhl"><span class="CodeRay">  MyService(fhicl::ParameterSet const&#38;, art::ActivityRegistry&#38;);
</span></code></pre></li>
	</ol>


The best practice is to make a service provider (see below) that is as independent as possible from the framework and to use the <em>art</em> service class to provide the interface between the service provider and the framework. In other words,
	<ul>
	<li><strong>service provider</strong> (or simply <em>provider</em>) class performs the operations the users need (e.g., "give me the current intensity of the electric field")</li>
		<li><strong>framework service</strong> (or simple <em>service</em>) class interacts with the framework; when we think of our supported framework, <em>art</em>, this class has the requirements described above, owns and manages the lifetime of the provider, and makes sure the provider is informed of the events it's interested on (e.g. "it's a new run, this is the new electric field", or "it's a new run, here is where you can ask about the new electric field")</li>
	</ul>


A specimen of this protocol can be seen in <code>Geometry</code> service:
	<ul>
	<li>the provider, <code>geo::GeometryCore</code>, can load given a configuration in FHiCL parameter set format, and can answer all the questions about the geometry ("which wire is the closest to this point?")</li>
		<li>the service, <code>geo::Geometry</code>, creates, configures and owns a <code>geo::GeometryCore</code> instance, hooks to the framework to know when a run change happens, and in that case asks the provider to update accordingly</li>
	</ul>


	<p>To write services from scratch, one can start with the <a class="wiki-page" href="/redmine/projects/larsoft/wiki/LArSoft_examples#Services">examples in larexample repository</a>.</p>


	<blockquote>
		<p>The <code>Geometry</code> service is actually not quite following all LArSoft prescriptions, for legacy reasons.<br />In particular, <code>geo::Geometry</code> service doesn't follow the standard name pattern (that would have it <code>geo::GeometryService</code>) and, more important, is actually able to provide directly all the geometry functionality since it inherits the interface from <code>geo::GeometryCore</code>. This is <strong>not</strong> the recommended implementation.</p>
	</blockquote>


	<p>To get to the functionality, a user needs to ask the framework about the service, and about the provider to the service:<br /><pre><code class="cpp syntaxhl"><span class="CodeRay">art::ServiceHandle&lt;geo::Geometry&gt; GeoHandler;
geo::Geometry const&#38; GeoService = *GeoHandler;
geo::GeometryCore <span class="directive">const</span>* geom = GeoService-&gt;provider();
</span></code></pre><br />or, more compactly,<br /><pre><code class="cpp syntaxhl"><span class="CodeRay">geo::GeometryCore <span class="directive">const</span>* geom = art::ServiceHandle&lt;geo::Geometry&gt;()-&gt;provider();
</span></code></pre><br />LArSoft provides a utility function <code>providerFrom()</code> in <code>larcore/CoreUtils/ServiceUtils.h</code> to make this even more compact:<br /><pre><code class="cpp syntaxhl"><span class="CodeRay">geo::GeometryCore <span class="directive">const</span>* geom = lar::providerFrom&lt;geo::Geometry&gt;();
</span></code></pre><br />Both the forms can be made even more compact, at the expense of readability, by replacing the provider class name with <code>auto</code>: <code>geo::GeometryCore const* geom</code> becomes <code>auto const*</code>: faster to write, but then one has to figure out where to find the documentation of the interface (hint: start from the service documentation, and a pointer will lead you to the provider).</p>


	<div class="contextual heading-2" title="Edit this section" id="section-2"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/Writing_LArSoft_service/edit?section=2">Edit this section</a></div><a name="Models-for-writing-services"></a>
<h2 >Models for writing services<a href="#Models-for-writing-services" class="wiki-anchor">&para;</a></h2>


The plain <em>art</em> service is like described above: any class with a public constructor with a specific signature and a special <em>art</em> macro.<br />In LArSoft, we may need more flexibility than just a single service with a single implementation:
	<ul>
	<li>have different implementations for the same service (for example, a generic implementation and a special implementation for ProtoDUNE detector)</li>
		<li>have the class providing the service be independent of the framework; this was also described above</li>
	</ul>


	<p>The following paragraphs describe the three combinations of features on top of the plain <em>art</em> service.</p>


	<div class="contextual heading-3" title="Edit this section" id="section-3"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/Writing_LArSoft_service/edit?section=3">Edit this section</a></div><a name="Service-interface-with-many-implementations-eg-experiment-specific"></a>
<h3 >Service interface with many implementations (e.g., experiment-specific)<a href="#Service-interface-with-many-implementations-eg-experiment-specific" class="wiki-anchor">&para;</a></h3>


	<p>This model allows different ways to implement the same service. This is an <em>art</em> feature, and nothing of this is specific to LArSoft.<br />At run time, a single implementation will be chosen by <em>art</em> depending on the service configuration (from the FHiCL configuration file).</p>


	<p>The service interface is a (possibly abstract<sup><a href="#fn1">1</a></sup>) class that describes all the service is expected to be able to do. For example<sup><a href="#fn2">2</a></sup>:<br /><pre><code class="cpp syntaxhl"><span class="CodeRay"><span class="preprocessor">#include</span> <span class="include">&quot;larcorealg/CoreUtils/UncopiableAndUnmovableClass.h&quot;</span> 

<span class="keyword">class</span> <span class="class">DetectorProperties</span>: <span class="directive">private</span> lar::UncopiableAndUnmovableClass {
    <span class="directive">public</span>:
  <span class="comment">// classes with virtual methods are required a virtual destructor</span>
  <span class="directive">virtual</span> ~DetectorProperties() = <span class="keyword">default</span>;

  <span class="comment">/// Return the electric field in the TPC, in kV/cm; field is assumed the same in all TPCs</span>
  <span class="directive">virtual</span> <span class="predefined-type">float</span> Efield() <span class="directive">const</span> = <span class="integer">0</span>;

  <span class="comment">/// Return the temperature of the argon in the TPC, in kelvin</span>
  <span class="directive">virtual</span> <span class="predefined-type">float</span> Temperature() <span class="directive">const</span> = <span class="integer">0</span>;

}; <span class="comment">// class DetectorProperties</span>

DECLARE_ART_SERVICE_INTERFACE(DetectorProperties, LEGACY)
</span></code></pre><br />For a complete example, see <a href="http://nusoft.fnal.gov/larsoft/doxsvn/html/group__ShowerCalibrationGalore.html#details" class="external">lar::example::ShowerCalibrationGalore</a>, or <code>geo::ExptGeoHelperInterface</code> in <code>larcore</code> (Redmine link to <a href="https://cdcvs.fnal.gov/redmine/projects/larcore/repository/revisions/develop/entry/larcore/Geometry/ExptGeoHelperInterface.h" class="external">larcore/Geometry/ExptGeoHelperInterface.h</a> ).</p>


	<p>An module or algorithm can use this service by:<br /><pre><code class="cpp syntaxhl"><span class="CodeRay">art::ServiceHandle&lt;DetectorProperties&gt; detProp;
<span class="predefined-type">float</span> temperature = detProp-&gt;Temperature();
</span></code></pre><br />or pick the class directly with <br /><pre><code class="cpp syntaxhl"><span class="CodeRay">DetectorProperties <span class="directive">const</span>* detProp = &#38;(*art::ServiceHandle&lt;DetectorProperties&gt;());
<span class="predefined-type">float</span> temperature = detProp-&gt;Temperature();
</span></code></pre><br />Note that in both cases the service class is dependent on the framework (at very least via the <em>art</em> service macros).</p>


	<p>The user will have to choose which implementation of the service to make available in the job.<br />The job configuration will include something like:<br /><pre>
services: {
  DetectorProperties: # this is the name of the service interface
  {
     service_provider: DetectorPropertiesStandard # this is the name of the implementation chosen
     Efield:       0.6                            # the remaining configuration is implementation-dependent
     Temperature: 83 
  } # DetectorProperties 
} # services
</pre><br />or another one, like:<br /><pre>
services: {
  DetectorProperties: # this is the name of the service interface
  {
     service_provider: DetectorPropertiesFromDB            # this is the name of the implementation chosen
     DBServer: "http://database.experiment.org/conditions" # the remaining configuration is implementation-dependent
  } # DetectorProperties 
} # services
</pre></p>


	<p>An implementation class will have a declaration like:<br /><pre><code class="cpp syntaxhl"><span class="CodeRay"><span class="keyword">class</span> <span class="class">DetectorPropertiesStandard</span>: <span class="directive">public</span> DetectorProperties {
    <span class="directive">public</span>:

  DetectorPropertiesStandard(fhicl::ParameterSet const&#38;, art::ActivityRegistry&#38;);

  <span class="comment">/// Return the electric field in the TPC, in kV/cm; field is assumed the same in all TPCs</span>
  <span class="directive">virtual</span> <span class="predefined-type">float</span> Efield() <span class="directive">const</span> <span class="directive">override</span> { <span class="keyword">return</span> fEfield; }

  <span class="comment">/// Return the temperature of the argon in the TPC, in kelvin</span>
  <span class="directive">virtual</span> <span class="predefined-type">float</span> Temperature() <span class="directive">const</span> <span class="directive">override</span> { <span class="keyword">return</span> fTemperature; }

    <span class="directive">private</span>:
  <span class="predefined-type">float</span> fEfield;      <span class="comment">///&lt; electric field [kV/cm]</span>
  <span class="predefined-type">float</span> fTemperature; <span class="comment">///&lt; argon temperature [K]</span>

}; <span class="comment">// class DetectorPropertiesStandard</span>

DECLARE_ART_SERVICE_INTERFACE_IMPL(DetectorPropertiesStandard, DetectorProperties, LEGACY)
</span></code></pre></p>


	<p>Again, this is a standard <em>art</em> facility.</p>


	<p id="fn1" class="footnote"><sup>1</sup> An abstract class, in C++ sense, is a class that has virtual methods it does not provide a definition of. Derived classes must provide such definitions.</p>


	<p id="fn2" class="footnote"><sup>2</sup> Some LArSoft utilities enforce the recommendation of having service provider classes non-copiable and unmovable. The derivation from <code>lar::UncopiableAndUnmovableClass</code> achieves that goal.</p>


	<div class="contextual heading-3" title="Edit this section" id="section-4"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/Writing_LArSoft_service/edit?section=4">Edit this section</a></div><a name="Service-factorization-model"></a>
<h3 >Service factorization model<a href="#Service-factorization-model" class="wiki-anchor">&para;</a></h3>


	<p><span style="float:right"><img src="https://cdcvs.fnal.gov/redmine/attachments/download/29534/ServiceDependency.svg" alt="" /></span></p>


This is a simple scheme of LArSoft services in factorization model:
	<ul>
	<li>the service creates and owns an instance of the provider</li>
		<li>the provider is a free class that knows only about its own job</li>
	</ul>


The <em>art</em> service class is expected to have:
	<ul>
	<li>a method <code>provider()</code> returning a constant pointer to a provider instance users can use</li>
		<li>a type definition <code>provider_type</code> indicating the type of the provider</li>
	</ul>


	<p>These requests allow LArSoft to provide a simple function to obtain the provider of any service, <code>lar::providerFrom()</code>. Regardless, the service should provide <em>some</em> method to obtain the provider that the users can use directly.</p>


	<p>An example of service provider may be:<br /><pre><code class="cpp syntaxhl"><span class="CodeRay"><span class="comment">/// Configuration parameter documentation goes here</span>
<span class="keyword">class</span> <span class="class">DetectorProperties</span> {
    <span class="directive">public</span>:
  <span class="comment">/// Constructor: reads the configuration from a parameter set</span>
  DetectorProperties(fhicl::ParameterSet const&#38; pset)
    : fEfield(pset.get&lt;<span class="predefined-type">float</span>&gt;(<span class="string"><span class="delimiter">&quot;</span><span class="content">Efield</span><span class="delimiter">&quot;</span></span>))
    , fTemperature(pset.get&lt;<span class="predefined-type">float</span>&gt;(<span class="string"><span class="delimiter">&quot;</span><span class="content">Temperature</span><span class="delimiter">&quot;</span></span>))
    {}

  <span class="comment">/// Return the electric field as configured [kV/cm]</span>
  <span class="predefined-type">float</span> Efield() <span class="directive">const</span> { <span class="keyword">return</span> fEfield; }

  <span class="comment">/// Return the argon temperature as configured [K]</span>
  <span class="predefined-type">float</span> Temperature() <span class="directive">const</span> { <span class="keyword">return</span> fTemperature; }

    <span class="directive">private</span>:
  <span class="predefined-type">float</span> fEfield;      <span class="comment">///&lt; value of electric field [kV/cm]</span>
  <span class="predefined-type">float</span> fTemperature; <span class="comment">///&lt; value of argon temperature [K]</span>

}; <span class="comment">// class DetectorProperties</span>
</span></code></pre><br />This class has no dependency on the framework (although it <em>does</em> depend on some non-standard library, the FHiCL library). It can be instantiated in a simple unit test with no knowledge of any framework.</p>


	<p>To be able to use this service provider as a <em>art</em> service, an additional class is required:<br /><pre><code class="cpp syntaxhl"><span class="CodeRay"><span class="keyword">class</span> <span class="class">DetectorPropertiesService</span> {
    <span class="directive">public</span>:
  <span class="directive">using</span> provider_type = DetectorProperties; <span class="comment">///&lt; type of the service provider</span>

  <span class="comment">// Standard art service constructor</span>
  DetectorPropertiesService(fhicl::ParameterSet const&#38;, art::ActivityRegistry&#38;);

  <span class="comment">/// Return a pointer to a (constant) detector properties provider</span>
  provider_type <span class="directive">const</span>* provider() <span class="directive">const</span> { <span class="keyword">return</span> fProvider.get(); }

    <span class="directive">private</span>:
  std::unique_ptr&lt;DetectorProperties&gt; fProvider; <span class="comment">///&lt; owned provider</span>

}; <span class="comment">// class DetectorPropertiesService</span>

DECLARE_ART_SERVICE(DetectorPropertiesService, LEGACY)
</span></code></pre><br />and a possible constructor implementation may be:<br /><pre><code class="cpp syntaxhl"><span class="CodeRay">
DetectorPropertiesService::DetectorPropertiesService
  (fhicl::ParameterSet const&#38; pset, art::ActivityRegistry&#38;)
  : fProvider(<span class="keyword">new</span> DetectorProperties(pset))
{
}

DEFINE_ART_SERVICE(DetectorPropertiesService)
</span></code></pre><br />An example of this factorization can be seen in the geometry service.<br />In this example, the service <em>contains</em> a instance of the provider. This is the recommended pattern.<br />The <code>Geometry</code> service instead inherits, rather than containing, the provider. This is an implementation forced by backward compatibility requirement and is <em>not</em> the recommended method, since it strongly couples provider and service (for example, they are forced to have the same life time).</p>


	<div class="contextual heading-3" title="Edit this section" id="section-5"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/Writing_LArSoft_service/edit?section=5">Edit this section</a></div><a name="Service-interface-factorization-eg-experiment-specific-framework-independent-service-implementations"></a>
<h3 >Service interface factorization (e.g., experiment-specific, framework-independent service implementations)<a href="#Service-interface-factorization-eg-experiment-specific-framework-independent-service-implementations" class="wiki-anchor">&para;</a></h3>


	<p><span style="float:right"><img src="https://cdcvs.fnal.gov/redmine/attachments/download/29535/ServiceInterfaceDependency.svg" alt="" /></span></p>


	<p>The factorization model can be extended to <em>service interfaces</em> (which are summarized above).<br />The way to achieve that is by writing an additional, special configuration parameter for the service:<br /><pre><code class="python syntaxhl"><span class="CodeRay">services: {
  IService: {
    service_provider: <span class="string"><span class="delimiter">&quot;</span><span class="content">ImplAService</span><span class="delimiter">&quot;</span></span> 

    <span class="comment"># ... on with the rest of the service configuration</span>

  } <span class="comment"># IService</span>
} <span class="comment"># services</span>
</span></code></pre></p>


The factorization model applies to both the interface and to all the implementations: each of them will be split into a service and a provider.<br />For the interface side, both service and provider are abstract classes:
	<ul>
	<li>the service has the only task of exposing the interface that returns the provider</li>
		<li>the provider exposes the full interface of the provider functionality</li>
	</ul>


For the implementation(s) side, each service is pretty much the same as the normal services, except that:
	<ul>
	<li>service and provider classes inherit from their respective abstract interface classes</li>
		<li>service class <code>provider()</code> method returns a pointer to the interface provider class, not to the implementation class</li>
	</ul>


	<p>Therefore, note that users do not interact at all (and don't even know the existence of) the implementation classes: outside of the implementations themselves, the name of the service implementation appears only in the configuration file, and the name of the provider implementation does not appear at all. In fact, anything added in the implementations that is not already present in the interface will be inaccessible to the user.</p>


A fully developed example of this scheme is the actual implementation of <code>DetectorProperties</code> service (and of <code>DetectorClocks</code> and <code>LArProperties</code> as well).<br />The service providers are contained in <code>lardataalg/DetectorInfo</code>, while the <em>art</em> services are in <code>lardata/DetectorInfoService</code>:
	<ul>
	<li><a href="https://cdcvs.fnal.gov/redmine/projects/lardataalg/repository/revisions/develop/entry/lardataalg/DetectorInfo/DetectorProperties.h" class="external"><code>detinfo::DetectorProperties</code></a> is the provider interface; algorithms will use constant pointers to it</li>
		<li><a href="https://cdcvs.fnal.gov/redmine/projects/lardata/repository/revisions/develop/entry/lardata/DetectorInfoServices/DetectorPropertiesService.h" class="external"><code>detinfo::DetectorPropertiesService</code></a> is the service interface; modules will ask for it (<code>lar::providerFrom&lt;DetectorPropertiesService&gt;()</code> or <code>art::ServiceHandle&lt;DetectorPropertiesService&gt;</code>); in the configuration, <code>services.DetectorPropertiesService</code> will specify the service configuration</li>
		<li><a href="https://cdcvs.fnal.gov/redmine/projects/lardata/repository/revisions/develop/entry/lardata/DetectorInfoServices/DetectorPropertiesServiceStandard.h" class="external"><code>detinfo::DetectorPropertiesServiceStandard</code></a> is a <em>art</em> service implementation; in the configuration, there will be a line equivalent to <code>services.DetectorPropertiesService.service_provider: DetectorPropertiesServiceStandard</code> (note that the <code>service_provider</code> term is a <em>art</em> choice that clashes with LArSoft's unfortunate choice of the word "provider" to denote the framework-independent class described above); it is invisible to algorithms and modules</li>
		<li><a href="https://cdcvs.fnal.gov/redmine/projects/lardataalg/repository/revisions/develop/entry/lardataalg/DetectorInfo/DetectorPropertiesStandard.h" class="external"><code>detinfo::DetectorPropertiesStandard</code></a> is a provider implementation; it is invisible with respect to configuration, algorithms and modules; an instance of it will be owned by <code>detinfo::DetectorPropertiesServiceStandard</code></li>
	</ul>


	<p>The interface classes (of provider and service) do not need to have an implementation file (in case of <code>DetectorProperties</code>, they don't).</p>


	<p><em>Note:</em> <span style="font-family: monospace;"><a href="http://nusoft.fnal.gov/larsoft/doxsvn/html/group__ShowerCalibrationGalore.html" class="external">ShowerCalibrationGalore</a></span> in <code>larexamples</code> is also a fully developed and thoroughly documented example of this pattern.</p>


	<div class="contextual heading-2" title="Edit this section" id="section-6"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/Writing_LArSoft_service/edit?section=6">Edit this section</a></div><a name="Prescriptions-for-the-use-of-LArSoft-services"></a>
<h2 >Prescriptions for the use of LArSoft services<a href="#Prescriptions-for-the-use-of-LArSoft-services" class="wiki-anchor">&para;</a></h2>


	<p>In the factorization development model, user code typically lives in an algorithm class that is interfaced to the framework by whatever the framework provides for the job (in <em>art</em>, that is a module).<br />The algorithm is prescribed to be portable and with minimal dependencies: it should not usSe a framework service, because that will require the framework to be present. Therefore, the algorithm code has to use <em>providers</em> directly.</p>


	<p>A recommended pattern is to have an algorithm class with a method that receives and stores pointers to the required providers.<br />In the following example, that method is called <code>Setup()</code>:<br /><pre><code class="cpp syntaxhl"><span class="CodeRay"><span class="keyword">namespace</span> ns {

  <span class="comment">/// Never forget plenty of documentation!!</span>
  <span class="keyword">class</span> <span class="class">MyAlgorithm</span> {
      <span class="directive">public</span>:
    MyAlgorithm(fhicl::ParameterSet const&#38; pset);

    <span class="directive">void</span> Setup(pns1::NeededProvider1 <span class="directive">const</span>* pProv1, pns2::NeededProvider2 <span class="directive">const</span>* pProv2)
      {
        prov1 = pProv1;
        prov2 = pProv2;
        <span class="comment">// maybe some check that they are not null...</span>
      }

    <span class="comment">// ...</span>

      <span class="directive">protected</span>:
    pns1::NeededProvider1 <span class="directive">const</span>* prov1 = <span class="predefined-constant">nullptr</span>; <span class="comment">///&lt; service provider 1</span>
    pns2::NeededProvider2 <span class="directive">const</span>* prov2 = <span class="predefined-constant">nullptr</span>; <span class="comment">///&lt; service provider 2</span>

    <span class="comment">// ...</span>

  }; <span class="comment">// class MyAlgorithm</span>

} <span class="comment">// namespace ns</span>
</span></code></pre></p>


	<p>An <em>art</em> module using this algorithm would look like this:<br /><pre><code class="cpp syntaxhl"><span class="CodeRay"><span class="preprocessor">#include</span> <span class="include">&quot;larcore/CoreUtils/ServiceUtil.h&quot;</span> <span class="comment">// lar::providerFrom()</span>
<span class="comment">// ...</span>

<span class="keyword">class</span> <span class="class">MyModule</span>: <span class="directive">public</span> art::EDAnalyzer {
    <span class="directive">public</span>:
  MyModule(fhicl::ParameterSet const&#38; pset)
    : pAlgo(<span class="keyword">new</span> ns::MyAlgorithm(pset))
    {}

  <span class="directive">virtual</span> <span class="directive">void</span> analyze(art::Event const&#38;) <span class="directive">override</span>
    {
      <span class="comment">// make sure the algorithm is provided the services it needs</span>
      pAlgo-&gt;Setup(
        lar::providerFrom&lt;pns1::NeededService1&gt;(),
        lar::providerFrom&lt;pns2::NeededService2&gt;()
        );

      <span class="comment">// then give the algorithm the input from the event</span>
      <span class="comment">// (and set for example output histograms if needed)</span>

      <span class="comment">// then run the algorithm</span>

      <span class="comment">// then do something with the results</span>

    } <span class="comment">// analyze()</span>

    <span class="directive">private</span>:
  std::unique_ptr&lt;ns::MyAlgorithm&gt; pAlgo; <span class="comment">///&lt; instance of my algorithm</span>

}; <span class="comment">// class MyModule</span>
</span></code></pre></p>


	<div class="contextual heading-3" title="Edit this section" id="section-7"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/Writing_LArSoft_service/edit?section=7">Edit this section</a></div><a name="Naming-conventions"></a>
<h3 >Naming conventions<a href="#Naming-conventions" class="wiki-anchor">&para;</a></h3>


	<p>We are currently endorsing the following naming convention:</p>


	<ul>
	<li>for concrete services:
	<ul>
	<li>provider: a descriptive, one- or two-word name; e.g., <code>LArProperties</code></li>
		<li>service: the same class name as for the provider, with <code>Service</code> appended on it: e.g., <code>LArPropertiesService</code>;<br />    this has the exhilarating effect of forcing a implementation file name like <code>LArPropertiesService_service.cc</code></li>
	</ul>
	</li>
		<li>for service interfaces:
	<ul>
	<li>provider interface: a descriptive name (as for the previous category), prefixed by <code>I</code> (capital <code>i</code>): e.g., <code>ILArProperties</code></li>
		<li>service interface: same rule as above, e.g. <code>ILarPropertiesService</code></li>
		<li>provider implementation: a descriptive name, connecting to the interface: <code>StandardLArProperties</code>, <code>LArPropertiesFromDB</code> (we reserve the plain <code>LArProperties</code> name for LArSoft use)</li>
		<li>service implementation: again the same class name as for the provider, with <code>Service</code> appended on it: e.g., <code>StandardLArPropertiesService</code>, <code>LArPropertiesFromDBService</code>; this can yield pretty ugly names, but has the advantage of predictability</li>
	</ul></li>
	</ul>


	<div class="contextual heading-2" title="Edit this section" id="section-8"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/Writing_LArSoft_service/edit?section=8">Edit this section</a></div><a name="Developing-a-new-LArSoft-service"></a>
<h2 >Developing a new LArSoft service<a href="#Developing-a-new-LArSoft-service" class="wiki-anchor">&para;</a></h2>


	<blockquote>
		<p>This section will host excerpts of the new <code>DetectorProperties</code> service. Since the latter is not ready yet, this is a <strong>to-do</strong>.</p>
	</blockquote>


	<div class="contextual heading-3" title="Edit this section" id="section-9"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/Writing_LArSoft_service/edit?section=9">Edit this section</a></div><a name="Lazy-provider-instantiation"></a>
<h3 >Lazy provider instantiation<a href="#Lazy-provider-instantiation" class="wiki-anchor">&para;</a></h3>


	<p>The framework service is required to return a working, fully configured provider as the result of a <code>provider()</code> call.<br />The service can delay the creation of the provider until then. For example:<br /><pre><code class="cpp syntaxhl"><span class="CodeRay"><span class="keyword">class</span> <span class="class">MyLazyService</span> {
    <span class="directive">public</span>:
  <span class="directive">using</span> provider_type = MyProvider;

  MyLazyService(fhicl::ParameterSet const&#38; pset, art::ActivityRegistry&#38;)
    : config(pset)
    {}

  <span class="comment">/// Returns a (constant) pointer to the service provider</span>
  MyProvider <span class="directive">const</span>* provider()
    {
      <span class="keyword">if</span> (!prov) prov.reset(CreateProvider());
      <span class="keyword">return</span> prov;
    }

    <span class="directive">private</span>:
  fhicl::ParameterSet config; <span class="comment">///&lt; a copy of the service configuration</span>

  std::unique_ptr&lt;MyProvider&gt; prov; <span class="comment">///&lt; pointer to our provider</span>

  <span class="comment">/// Creates and returns new provider</span>
  std::unique_ptr&lt;MyProvider&gt; CreateProvider() <span class="directive">const</span>
    {
      <span class="directive">auto</span> new_prov = std::make_unique&lt;MyProvider&gt;(config);

      new_prov-&gt;Setup(
        lar::providerFrom&lt;NeededService&gt;(),
        lar::providerFrom&lt;RequiredService&gt;()
        );
      <span class="keyword">return</span> new_prov;
    } <span class="comment">// CreateProvider()</span>

}; <span class="comment">// class MyLazyService</span>

DEFINE_ART_SERVICE(MyLazyService)
</span></code></pre><br />Note that in this paradigm the provider could still get effectively unused.<br />For example, an algorithm might claim it requires <code>MyProvider</code>, and then never actually use it. Since the <code>Setup()</code> call of that algorithm takes a pointer to the provider, provider creation is forced when the algorithm is <code>Setup()</code> rather than when the provider is actually used.<br />In general, providers should consider to implement their own laziness. The right solution depends on the specific case.</p>


	<div class="contextual heading-3" title="Edit this section" id="section-10"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/Writing_LArSoft_service/edit?section=10">Edit this section</a></div><a name="Service-dependencies"></a>
<h3 >Service dependencies<a href="#Service-dependencies" class="wiki-anchor">&para;</a></h3>


	<p>Service providers are not responsible for the other providers they depend on: they assume the providers are fully functional.<br />It is responsibility of the framework to ensure that the services are ready when needed, and they are around long until they are not needed any more. It is responsibility of each service to make sure that their own provider is ready when its pointer is requested (by <code>provide()</code> call), and to make sure to get, by the proper <code>provider()</code> calls to other services, all the needed providers.</p>


	<div class="contextual heading-4" title="Edit this section" id="section-11"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/Writing_LArSoft_service/edit?section=11">Edit this section</a></div><a name="Updating-services-and-service-dependencies"></a>
<h4 >Updating services and service dependencies<a href="#Updating-services-and-service-dependencies" class="wiki-anchor">&para;</a></h4>


	<p>Services can (and, in LArSoft, often <em>do</em>) depend on other services. This dependency is propagated to the providers too.<br />Therefore the service must take care that the provider is informed of any change in the providers it depends from. In other words, when service <code>B</code> depends on service <code>A</code>, if the pointer to provider <code>A</code> can change during the job, it is on the service <code>B</code> owning provider <code>B</code> to give the latter the updated pointer to provider <code>A</code>.<br />For this, a <code>Setup()</code> method is recommended.<br />Although it is annoying to have the services do this, it is safe: doing it won't cause harm, not doing it might.</p>


	<div class="contextual heading-3" title="Edit this section" id="section-12"><a class="icon-only icon-edit" href="/redmine/projects/larsoft/wiki/Writing_LArSoft_service/edit?section=12">Edit this section</a></div><a name="Multi-threading-support"></a>
<h3 >Multi-threading support<a href="#Multi-threading-support" class="wiki-anchor">&para;</a></h3>


	<p>This model has not been confronted with multi threading yet.<br />Once the supported framework, <em>art</em>, defines its multi threading policy, this model will be updated to cope with it.</p>


<hr />


	<p><em>For questions, contact Gianluca Petrillo (<a class="email" href="mailto:petrillo@fnal.gov">petrillo@fnal.gov</a>).</em></p>
</div>


<fieldset class="collapsible collapsed hide-when-print">
  <legend onclick="toggleFieldset(this);">Files (2)</legend>
  <div style="display: none;">

  <div class="attachments">
<div class="contextual">
  <a title="Edit attached files" class="icon-only icon-edit" href="/redmine/attachments/wiki_pages/17224/edit">Edit attached files</a>
</div>
<table>
<tr>
  <td>
    <a class="icon icon-attachment" href="/redmine/attachments/29534/ServiceDependency.svg">ServiceDependency.svg</a>    <span class="size">(33.3 KB)</span>
    <a class="icon-only icon-download" title="Download" href="/redmine/attachments/download/29534/ServiceDependency.svg">ServiceDependency.svg</a>  </td>
  <td>UML-like scheme for LArSoft services</td>
  <td>
      <span class="author">Gianluca Petrillo, 10/09/2015 05:26 PM</span>
  </td>
  <td>
      <a data-confirm="Are you sure?" class="delete icon-only icon-del" title="Delete" rel="nofollow" data-method="delete" href="/redmine/attachments/29534">Delete</a>
  </td>
</tr>
<tr>
  <td>
    <a class="icon icon-attachment" href="/redmine/attachments/29535/ServiceInterfaceDependency.svg">ServiceInterfaceDependency.svg</a>    <span class="size">(78.7 KB)</span>
    <a class="icon-only icon-download" title="Download" href="/redmine/attachments/download/29535/ServiceInterfaceDependency.svg">ServiceInterfaceDependency.svg</a>  </td>
  <td>UML-like scheme for LArSoft service interfaces</td>
  <td>
      <span class="author">Gianluca Petrillo, 10/09/2015 05:26 PM</span>
  </td>
  <td>
      <a data-confirm="Are you sure?" class="delete icon-only icon-del" title="Delete" rel="nofollow" data-method="delete" href="/redmine/attachments/29535">Delete</a>
  </td>
</tr>
</table>
</div>

  
  <div id="wiki_add_attachment">
    <form id="add_attachment_form" enctype="multipart/form-data" action="/redmine/projects/larsoft/wiki/Writing_LArSoft_service/add_attachment" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="Rc0KIV/PYC6ZJ+tip1tx9kJG7UZmqt2VE4B1J8BQ58qvI+6831KcWIBQBLtttiXhKx82sv1eHNFqTFt8yqW4fg==" />
      <div class="box">
      <p>
<span class="attachments_form">
  <span class="attachments_fields">
  </span>
  <span class="add_attachment" style="">
    <input type="file" name="attachments[dummy][file]" class="file_selector filedrop" multiple="multiple" onchange="addInputFiles(this);" data-max-file-size="419430400" data-max-file-size-message="This file cannot be uploaded because it exceeds the maximum allowed file size (400 MB)" data-max-concurrent-uploads="2" data-upload-path="/redmine/uploads.js" data-param="attachments" data-description="true" data-description-placeholder="Optional description" />
    (Maximum size: 400 MB)
  </span>
</span>

</p>
      </div>
      <input type="submit" name="commit" value="Add" />
</form>  </div>
</div>
</fieldset>

<p class="other-formats">Also available in:  <span><a class="pdf" rel="nofollow" href="/redmine/projects/larsoft/wiki/Writing_LArSoft_service.pdf">PDF</a></span>
  <span><a class="html" rel="nofollow" href="/redmine/projects/larsoft/wiki/Writing_LArSoft_service.html">HTML</a></span>
  <span><a class="txt" rel="nofollow" href="/redmine/projects/larsoft/wiki/Writing_LArSoft_service.txt">TXT</a></span>
</p>


        
        <div style="clear:both;"></div>
    </div>
</div>
</div>

<div id="ajax-indicator" style="display:none;"><span>Loading...</span></div>
<div id="ajax-modal" style="display:none;"></div>

<div id="footer">
  <div class="bgl"><div class="bgr">
    Powered by <a href="https://www.redmine.org/">Redmine</a> &copy; 2006-2019 Jean-Philippe Lang
  </div></div>
</div>
</div>
</div>

</body>
</html>
