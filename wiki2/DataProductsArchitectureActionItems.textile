
h1. Changes to data products

{{toc}}

h2. @raw::RawDigit@

h3. Current declaration

(from @lardata@ @v03_04_04@)

<pre>
<code class="cpp">
  class RawDigit {

  public:
    RawDigit(); // Default constructor
    
    std::vector<short> fADC;

  private:

    uint32_t        fChannel;     ///< channel in the readout
    unsigned short  fSamples;     ///< number of ticks of the clock
    
    double          fPedestal;    ///< pedestal for this channel
    double          fSigma;       ///< sigma of the pedestal counts for this channel

    raw::Compress_t fCompression; ///< compression scheme used for the ADC vector
    
  public:
    
    RawDigit(uint32_t           channel, 
             unsigned short     samples,
             const std::vector<short>&amp; adclist,
             raw::Compress_t    compression=raw::kNone);
    RawDigit(uint32_t           channel,
             const std::vector<short>&amp; adclist,
             raw::Compress_t    compression=raw::kNone);
        
    // Set Methods
    void             SetPedestal(double ped);
    
    // Get Methods
    unsigned int    NADC()        const;
    short           ADC(int i)    const;
    uint32_t        Channel()     const;
    unsigned short  Samples()     const;
    double          GetPedestal() const; 
    double          GetSigma()    const; 
    raw::Compress_t Compression() const;

  };
</code>
</pre>


h3. Actions

|_.  Target         |_. Action                     |_. Action item             |_. Status                                                   |
|    @fPedestal@    | removal                      | get approval              | %{color:red}ArgoNeuT approval pending, ongoing discussion% |
|/5. @fADC@         |/5. move to private           | get approval              | %{color:green}approved[1]%                                 |
|                                                    move to private           | %{color:green}done%                                        |
|                                                    provide interface access  | %{color:green}done% (@ACDs()@)                             |
|                                                    verify constructors       | %{color:green}done%                                        |
|                                                    user code                 | %{color:green}LArSoft%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/6. %{color:red}@fFlags@% |/6. add saturation flag | get approval          | %{color:red}rejected[2]%                                 |
|                                                    design the implementation | %{color:orange}done%                                       | %{color:purple}Currently implemented as @std::bitset<16>@, might be not optimal in gcc STL implementation (seems based on @unsigned long@, 32 bits)% |
|                                                    implementation            | %{color:green}done%                                        |
|                                                    update constructors       | %{color:green}done%                                        |
|                                                    user code: constructors   | %{color:green}LArSoft%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                    user code: initialization | %{color:green}LArSoft%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% | saturation flag is not set ever yet |
|/12. %{color:green}documentation% |/12. add member documentation | for class  | %{color:green}done%                                        |
|                                                    for constructor I         | %{color:green}done%                                        |
|                                                    for constructor II        | %{color:green}constructor removed%                         |
|                                                    for @NADC()@              | %{color:green}done%                                        |
|                                                    for @ADC()@               | %{color:green}done%                                        |
|                                                    for @Channel()@           | %{color:green}done%                                        |
|                                                    for @Samples()@           | %{color:green}done%                                        |
|                                                    for @GetPedestal()@       | %{color:green}done% (pending removal)                      |
|                                                    for @GetSigma()@          | %{color:green}done% (pending removal)                      |
|                                                    for @Compression()@       | %{color:green}done%                                        |
|                                                    for flag interface        | %{color:green}done%                                        |
|                                                    for new @fADC@ accessor   | %{color:green}done%                                        |
|    documentation  | complete class documentation |                           | %{color:orange}in progress% |                              |


h3. Tests

|_.  Test type                   |_. Ran on version |_. Outcome              |
|/2. standard LArSoft test suite | @v03_06_00@      | %{color:green}success% |
|                                  @v03_08_00@      | %{color:red}TODO%      |



h2. @recob::Wire@

h3. Current declaration

(from @lardata@ @v03_04_04@)

<pre>
<code class="cpp">
  class Wire {
    public:
        ///< a region of interest is a pair (TDC offset, readings)
      typedef lar::sparse_vector<float> RegionsOfInterest_t;
      
      Wire(); // Default constructor
      ~Wire();
      
    private:
      RegionsOfInterest_t fSignalROI;
      art::Ptr<raw::RawDigit> fRawDigit;   ///< vector to index of raw digit for this wire
      geo::View_t             fView;       ///< view corresponding to the plane of this wire
      geo::SigType_t          fSignalType; ///< signal type of the plane for this wire
      unsigned int            fMaxSamples; ///< max number of ADC samples possible on the wire

      // partial constructor, used only as common part by the other constructors
      Wire(art::Ptr<raw::RawDigit> &amp;rawdigit);
  
    public:
      
      // ROI constructor
      Wire(const RegionsOfInterest_t&amp; sigROIlist,
           art::Ptr<raw::RawDigit> &amp;rawdigit);
      Wire(RegionsOfInterest_t&amp;&amp; sigROIlist,
           art::Ptr<raw::RawDigit> &amp;rawdigit);

      // Get Methods
      // zero-padded full length vector filled with ROIs
      std::vector<float>  Signal() const;

      const RegionsOfInterest_t&amp; SignalROI()  const;
      size_t                     NSignal()    const;
      art::Ptr<raw::RawDigit>    RawDigit()   const;
      geo::View_t                View()       const;
      geo::SigType_t             SignalType() const;
      uint32_t                   Channel()    const;
    };
</code>
</pre>


h3. Actions

|_.  Target           |_. Action                    |_. Action item             |_. Status                                                   |
|/6. %{color:orange}@fRawDigit@%      |/6. removal                  | approval                  | %{color:green}approved[1]%                                 |
|                                                     remove data member        | %{color:green}done%                                        |
|                                                     interface removal         | %{color:green}done%                                        |
|                                                     constructor update        | %{color:green}done%                                        |
|                                                     user code update: removal | %{color:green}@larcore@%, %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                     user code: association    | %{color:green}LArSoft%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/5. %{color:green}@fChannel@%       |/5. adding a channel ID      | approval                  | %{color:green}approved[1]%                                 |
|                                                     add data member           | %{color:green}done%                                        |
|                                                     update accessor           | %{color:green}done%                                        |
|                                                     constructor update        | %{color:green}done%                                        |
|                                                     documentation             | %{color:green}done%                                        |
|/6. %{color:orange}@fSignalType@%    |/6. removal                  | approval                  | %{color:green}approved[1]%                                 |
|                                                     remove data member        | %{color:green}done%                                        |
|                                                     remove accessor           | %{color:green}done%                                        |
|                                                    alternative implementation | %{color:orange}optional%                                  |
|                                                     constructor update        | %{color:green}done%                                        |
|                                                     user code: construction   | %{color:green}@larcore@%, %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/3. %{color:orange}@WireCreator@%    |/3. helper class for Wire construction | coding          | %{color:green}done%                                        |
|                                                               documentation   | %{color:green}done%                                        |
|                                                     user code: construction   | %{color:green}@larcore@%, %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|    documentation  | complete class documentation |                            | %{color:orange}in progress% |                              |


h3. Tests

|_.  Test type                   |_. Ran on version |_. Outcome              |
|/2. standard LArSoft test suite | @v03_06_00@      | %{color:green}success% |
|                                  @v03_08_00@      | %{color:red}TODO%      |



h2. @recob::Hit@

h3. Current declaration

(from @lardata@ @v03_04_04@)

<pre>
<code class="cpp">
  /// hits are 2D representations of charge deposited in the tdc/wire plane
  /// hits are assumed to be made from deconvoluted, unipolar signals
  class Hit {
  public:
      Hit(); // Default constructor

      std::vector<double>   fHitSignal;        ///< vector of ADC values within the hit window

  private:

      double                  fStartTime;      ///< initial tdc tick for hit            
      double                  fSigmaStartTime; ///< uncertainty on initial tick           
      double                  fEndTime;        ///< final tdc tick for hit          
      double                  fSigmaEndTime;   ///< uncertainty on final tick          
      double                  fPeakTime;       ///< tdc for the peak charge deposition       
      double                  fSigmaPeakTime;  ///< uncertainty for tdc of the peak       
      double                  fCharge;         ///< total charge deposited for hit        
      double                  fMaxCharge;      ///< maximum ADC value in hit window       
      double                  fSigmaCharge;    ///< uncertainty in total charge deposited       
      double                  fSigmaMaxCharge; ///< maximum ADC value in hit window       
      int                     fMultiplicity;   ///< how many hits could this one be shared with 
      double                  fGoodnessOfFit;  ///< how well do we believe we know this hit?    
      art::Ptr<recob::Wire>   fWire;           ///< index of Wire object this Hit was created on
      art::Ptr<raw::RawDigit> fRawDigit;       ///< index of RawDigit object this Hit was created on
      geo::View_t             fView;           ///< view for the plane of the hit
      geo::SigType_t          fSignalType;     ///< signal type for the plane of the hit
      geo::WireID       fWireID;         ///< WireID for the hit (Cryostat, TPC, Plane, Wire)

  public:
      Hit(art::Ptr<recob::Wire> &amp;wire,
     geo::WireID wid,
     double startTime, double sigmaStartTime,
     double endTime,   double sigmaEndTime,
     double peakTime,  double sigmaPeakTime,
     double totcharge, double sigmaTotCharge,
     double maxcharge, double sigmaMaxCharge,
     int    multiplicity,
     double goodnessOfFit);

      Hit(art::Ptr<raw::RawDigit> rawdigit,
     geo::View_t view,
     geo::SigType_t signaltype,
     geo::WireID wid,
     double startTime, double sigmaStartTime,
     double endTime,   double sigmaEndTime,
     double peakTime,  double sigmaPeakTime,
     double totcharge, double sigmaTotCharge,
     double maxcharge, double sigmaMaxCharge,
     int    multiplicity,
     double goodnessOfFit);
      
      // Get Methods
      double                  StartTime()                 const;
      double                  EndTime()                   const;
      double                  PeakTime()                  const;
      double                  SigmaStartTime()            const;
      double                  SigmaEndTime()              const;
      double                  SigmaPeakTime()             const;
      int                     Multiplicity()              const;
      uint32_t                Channel()                   const;
      double                  Charge(bool max=false)      const;
      double                  SigmaCharge(bool max=false) const;
      double                  GoodnessOfFit()             const;

      geo::SigType_t          SignalType()                const;
      geo::View_t             View()                      const;
      art::Ptr<recob::Wire>   Wire()                      const;
      art::Ptr<raw::RawDigit> RawDigit()                  const;
      geo::WireID             WireID()                    const;

      friend std::ostream&amp;  operator << (std::ostream &amp; o, const Hit &amp; a);
      friend bool           operator <  (const Hit &amp; a, const Hit &amp; b);

    };
</code>
</pre>


h3. Actions

|_.  Target                            |_. Action                      |_. Action item |_. Status                                                   |_. Comment                          |
|/6. %{color:red}@fRawDigit@%         |/6. removal                    | approval      | %{color:green}approved[1]%                                 |
|                                                       remove data member             | %{color:green}done%                                        |
|                                                       interface removal              | %{color:green}done%                                        |
|                                                       constructor update             | %{color:green}done%                                        |
|                                                       user code update: removal      | %{color:green}@larcore@%, %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                       user code: association         | %{color:green}@larcore@%, %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/6. %{color:red}@fWire@%             |/6. removal                    | approval      | %{color:green}approved[1]%                                 |
|                                                       remove data member             | %{color:green}done%                                        |
|                                                       interface removal              | %{color:green}done%                                        |
|                                                       constructor update             | %{color:green}done%                                        |
|                                                       user code update: removal      | %{color:green}@larcore@%, %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                       user code: association         | %{color:green}@larcore@%, %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:red}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/5. %{color:red}@fChannel@%           |/5. adding a channel ID      | approval        | %{color:green}approved[1]%                                 |
|                                                       add data member                | %{color:green}done%                                        |
|                                                       update accessor                | %{color:green}done%                                        |
|                                                       constructor update             | %{color:green}done%                                        |
|                                                       documentation                  | %{color:green}done%                                        |
|/6. %{color:green}@fHitSignal@%       |/6. removal                  | approval        | %{color:green}approved[4]%                                 |
|                                                       remove member                  | %{color:green}done%                                        |
|                                                       remove accessor                | %{color:green}done%                                        |
|                                                       update constructors            | %{color:green}done%                                        |
|                                                       user code: construction        | %{color:green}@larcore@%, %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:green}@t962offline@%, %{color:green}@lar1ndcode@% |
|                                                       user code: use                 | %{color:green}@larcore@%, %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:green}@t962offline@%, %{color:green}@lar1ndcode@% |
|/8. %{color:red}@Charge()@%           |/8. replace with @PeakAmplitude()@ (@Charge(true)@), add @IntegratedADC()@ (@Charge([false])@) and @SummedADC()@ and uncertainties | approval | %{color:green}approved[1]% |
|                                                       add data members               | %{color:green}done%                                        |
|                                                       add data accessors             | %{color:green}done%                                        |
|                                                       update constructors            | %{color:green}done%                                        |
|                                                       user code: construction        | %{color:green}@larcore@%, %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                       user code: update use          | %{color:green}@larcore@%, %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                       user code: use of new members  | %{color:orange}optional%                                   |
|                                                       document                       | %{color:green}done%                                        |
|/2. %{color:green}@fMaxCharge@%       |/2. removal                  | approval        | %{color:green}approved[1]%                                 | currently inaccessible |
|                                                                   remove data member | %{color:green}done%                                        |
|/9. %{color:red}hit width%            |/9. add a @RMS@ field      | approval          | %{color:green}approved[1]%                                 |
|                                                       add data member                | %{color:green}done% (@fRMS@)                               |
|                                                       add data accessor              | %{color:green}done% (@RMS()@)                              |
|                                                       alternative implementation     | %{color:orange}optional%                                   |
|                                                       update constructors            | %{color:green}done%                                        |
|                                                       user code: construction        | %{color:green}@larcore@%, %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                       user code: update use          | %{color:green}@larcore@%, %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                       user code: use of new members  | %{color:orange}optional%                                   |
|                                                       document                       | %{color:green}done%                                        |
|/6. %{color:red}start and end times% |/6. remove @StartTime()@, @EndTime()@, @SigmaStartTime()@, @SigmaEndTime()@ and the data members they access | approval                       | %{color:green}approved[1]%                                 | these are defined as peak &amp;pm; &amp;sigma; |
|                                                       remove data members            | %{color:green}done%                                        |
|                                                       remove accessors               | %{color:green}done%                           |
|                                                       constructor update             | %{color:green}done%                                        |
|                                                       document                       | %{color:green}done%                                        |
|                                                       user code update: construction | %{color:green}@larcore@%, %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/7. %{color:red}start and end ticks% |/7. add @StartTick()@ and @EndTick()@ | approval | %{color:green}approved[1]%                                | defined as the time window of the hit |
|                                                       add data members               | %{color:green}done%                           |
|                                                       add accessors                  | %{color:green}done%                           |
|                                                       constructor update             | %{color:green}done%                                        |
|                                                       document                       | %{color:green}done%                                        |
|                                                       user code update: construction | %{color:green}@larcore@%, %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                       user code update: renaming     | %{color:green}@larcore@%, %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/7. %{color:red}@LocalIndex()@%       |/7. add a member @fLocalIndex@ describing the index of this hit among the @Multiplicity()@ ones reconstructed between @StartTick()@ and @EndTick()@ | approval | %{color:green}approved[1]%       |
|                                                       add data member                | %{color:green}done%                                        |
|                                                       add data accessor              | %{color:green}done%                                        |
|                                                       update constructors            | %{color:green}done%                                        |
|                                                       user code: construction        | %{color:green}@larcore@%, %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                       user code: use of new members  | %{color:orange}optional%                                   |
|                                                       document                       | %{color:green}done%                                        |
| %{color:green}documentation%         | complete class documentation  | %{color:green}done%     | inline, Doxygen format                                     |


h3. Tests

|_.  Test type                   |_. Ran on version |_. Outcome              |
|/2. standard LArSoft test suite | @v03_06_00@      | %{color:green}success% |
|                                  @v03_08_00@      | %{color:red}TODO%      |


h3. Update reference table

|_. Old construct                |_. New construct                        |_. Comments |
| @Hit::Charge()@                | @Hit::Integral()@                      |
| @Hit::Charge(false)@           | @Hit::Integral()@                      |
| @Hit::Charge(true)@            | @Hit::PeakAmplitude()@                 |
| @Hit::StartTime()@             | @Hit::PeakTimePlusRMS(-1.)@            |/2. this is the old definition in @GausHitFinder@ module |
| @Hit::StopTime()@              | @Hit::PeakTimePlusRMS(+1.)@            |
| @Hit::Wire()@                  | defunct; look up through associations  |
| @Hit::RawDigit()@              | defunct; look up through associations  |
|/2. @#include "RecoBase/Hit.h"@ | @#include "RawData/raw.h"@             |/2. if using @raw::RawDigit@ or @raw::Uncompress()@; these are not included by @Hit.h@ any more |
|                                  @#include "RawData/RawDigit.h"@        |


h3. To-do&#39;s

h4. @Hit::fGoodnessOfFit@ definition

Although it&#39;s kind of doomed to be a &amp;chi;&amp;sup2;, this should be officially blessed by the authors, and also it must be decided whether it is &amp;chi;&amp;sup2; or reduced &amp;chi;&amp;sup2; (&amp;chi;&amp;sup2; / NDF), as it has been implemented so far.


h4. @HarrisVertexFinder@ module (@larreco/VertexFinder/HarrisVertexFinder_module.cc@) and @EndPoint2D@ algorithm (@larreco/RecoAlg/EndPoint2D.cxx@)

It uses lines like:
<pre><code style="c++">
  Gaussian((int)(j-((hit[i]->EndTick()-hit[i]->StartTick())/2.)+.5),0,hit[i]->EndTick()-hit[i]->StartTick())
</code></pre>
(of course it was @StartTime()@/@EndTime()@). The width of the gaussian is the time window of the hit;
this suggests that the interpretation of that time window was half &amp;sigma; of the hit, or something like that.
I have currently implemented something that makes vaguely sense, but it has to be checked.


h4. @HitAnaAlg@ (@larreco/RecoAlg/HitAnaAlg.cxx@)

The @HitInfo@ and @WireROIInfo@ data structures need to be checked.

Contact person: Wesley Ketchum


h4. Hit makers: @GausHitFinder@ (@larreco/HitFinder/GausHitFinder_module.cc@), @FFTHitFinder@ (@larreco/HitFinder/FFTHitFinder_module.cc@), @RFFHitFinder@ (@larreco/HitFinder/RFFHitFinder_module.cc@), @APAHitFinder@ (@larreco/HitFinder/APAHitFinder_module.cc@), @HitCheater@ (@larreco/HitFinder/HitCheater_module.cc@), @TTHitFinder@ (@larreco/HitFinder/TTHitFinder_module.cc@), @ClusterCrawler@ (@larreco/ClusterFinder/ClusterCrawler_module.cc@), @CalGausHFLBNE10kt@ (@lbnecode/CalData/CalGausHFLBNE10kt_module.cc@), maybe more

The algorithms need to define @fStartTick@, @fEndTick@ and @fSummedADC@.
Many need also @fLocalIndex@ and to check the order of the local hits in the collection
(the local hits are prescribed to be consecutive entries sorted by peak time).


h4. Hit disambiguation module (@larreco/HitFinder/APAHitFinder_module.cc@)

Should check that the new associations make sense and are correctly initialized.

h4. Summary of affected modules and algorithms

Hit creation modules and algorithms:

|_. Module name             |_. Source file                                            |_. Contact person                    |
| @ClusterCrawler@          | @larreco/ClusterFinder/ClusterCrawler_module.cc@         | Bruce Baller                        |
| @APAHitFinder@            | @larreco/HitFinder/APAHitFinder_module.cc@               | Tyler Alion (?)                     |
| @DisambigCheater@         | @larreco/HitFinder/DisambigCheater_module.cc@            | Tyler Alion (?)                     |
| @FFTHitFinder@            | @larreco/HitFinder/FFTHitFinder_module.cc@               | /candidate for removal?/            |
| @GausHitFinder@           | @larreco/HitFinder/GausHitFinder_module.cc@              | Jonathan Asaadi                     |
| @HitCheater@              | @larreco/HitFinder/HitCheater_module.cc@                 | Brian Rebel                         |
| @RFFHitFinder@            | @larreco/HitFinder/RFFHitFinder_module.cc@               | Wesley Ketchum                      |
| @TTHitFinder@             | @larreco/HitFinder/TTHitFinder_module.cc@                | Wesley Ketchum                      |
| @CCHitFinderAlg@          | @larreco/RecoAlg/CCHitFinderAlg.cxx                      | Bruce Baller                        |
| @DisambigAlg@             | @larreco/RecoAlg/DisambigAlg.cxx                         | Tyler Alion (?)                     |
| @CalGausHFLBNE35t@        | @lbnecode/lbne/CalData/CalGausHFLBNE10kt_module.cc@      | Jonathan Insler (?)                 |
| @CalGausHFLBNE10kt@       | @lbnecode/lbne/CalData/CalGausHFLBNE35t_module.cc@       | Jonathan Insler (?)                 |
| @HitFinder35t@            | @lbnecode/lbne/HitFinderLBNE/HitFinder35t_module.cc@     | Jonathan Insler, Tylet Alion (?)    |
| @DeconvGausHFLBNE10kt@    | @lbnecode/lbne/CalData/DeconvGausHFLBNE10kt_module.cc@   | Jonathan Insler (?)                 |
| @DeconvGausHFLBNE35t@     | @lbnecode/lbne/CalData/DeconvGausHFLBNE35t_module.cc@    | Jonathan Insler (?)                 |


Files affected by hit changes, that need checking:

|_.                         |_. Source file                                            |_. Contact person                    |
| @ClusterCheater@          | @larreco/ClusterFinder/ClusterCheater_module.cc@         | Jonathan Asaadi                     |
| @ClusterCrawlerShower@    | @larreco/ClusterFinder/ClusterCrawlerShower_module.cc@   | Bruce Baller                        |
| @KingaCluster@            | @larreco/ClusterFinder/KingaCluster_module.cc@           | /candidate for removal?/            |
| @BezierTrackerAlgorithm@  | @larreco/RecoAlg/BezierTrackerAlgorithm.cxx@             | Wesley Ketchum                      |
| @ClusterMatchAlg@         | @larreco/RecoAlg/ClusterMatchAlg.cxx@                    | Kazuhiro Terao                      |
| @DBScanAlg@               | @larreco/RecoAlg/DBScanAlg.cxx@                          | Tingjun Yang                        |
| @EndPointAlg@             | @larreco/RecoAlg/EndPointAlg.cxx@                        | Brian Rebel                         |
| @HoughBaseAlg@            | @larreco/RecoAlg/HoughBaseAlg.cxx@                       | Ben Carls                           |
| @SeedFinderAlgorithm@     | @larreco/RecoAlg/SeedFinderAlgorithm.cxx@                | Herbert Greenlee                    |
| @fuzzyClusterAlg@         | @larreco/RecoAlg/fuzzyClusterAlg.cxx@                    | Ben Carls                           |
| *@HarrisVertexFinder@*    | @larreco/VertexFinder/HarrisVertexFinder_module.cc@      | Josh Spitz                          |
| @VertexMatch@             | @larreco/VertexFinder/VertexMatch_module.cc@             | Wesley Ketchum                      |



h2. @recob::Cluster@

h3. Current declaration

(from @lardata@ @v03_04_04@)

<pre>
<code class="cpp">
  class Cluster {

  public:

    Cluster();  ///Default constructor

   private:

    double                     fTotalCharge;    ///< total charge in cluster
    double                     fdTdW;           ///< slope of cluster in tdc vs wire
    double                     fdQdW;           ///< slope of cluster in charge vs wire
    double                     fSigmadTdW;      ///< slope of cluster in tdc vs wire
    double                     fSigmadQdW;      ///< slope of cluster in charge vs wire
    std::vector<double>        fStartPos;       ///< start of cluster in (wire, tdc) plane
    std::vector<double>        fEndPos;         ///< start of cluster in (wire, tdc) plane
    std::vector<double>        fSigmaStartPos;  ///< start of cluster in (wire, tdc) plane
    std::vector<double>        fSigmaEndPos;    ///< start of cluster in (wire, tdc) plane
    int                        fID;             ///< cluster&#39;s ID
    geo::View_t                fView;           ///< view for this cluster
    geo::PlaneID               fPlaneID;        ///< location of the start of the cluster (cryo, tdc, plane)

  public:
    Cluster(double startWire, double sigmaStartWire,
            double startTime, double sigmaStartTime,
            double endWire, double sigmaEndWire,
            double endTime, double sigmaEndTime,
            double dTdW, double sigmadTdW,
            double dQdW, double sigmadQdW,
            double totalQ,
            geo::View_t view,
            int id);
    Cluster(double startWire, double sigmaStartWire,
            double startTime, double sigmaStartTime,
            double endWire, double sigmaEndWire,
            double endTime, double sigmaEndTime,
            double dTdW, double sigmadTdW,
            double dQdW, double sigmadQdW,
            double totalQ,
            geo::View_t view,
            int id,
            const geo::PlaneID&amp; planeID);
    
    //@{
    /// Accessors
    double                Charge()        const;
    geo::View_t           View()          const;
    double                dTdW()          const;
    double                dQdW()          const;
    double                SigmadTdW()     const;
    double                SigmadQdW()     const;
    std::vector<double>   StartPos()      const;
    std::vector<double>   EndPos()        const;
    std::vector<double>   SigmaStartPos() const;
    std::vector<double>   SigmaEndPos()   const;
    int                   ID()            const;
    const geo::PlaneID&amp;   Plane()         const; ///< returns the geometry plane of the cluster
    //@}
    
    /// Returns whether geometry plane is valid
    bool                  hasPlane()      const;

    /// Moves the cluster to the specified plane
    Cluster&amp; MoveToPlane(const geo::PlaneID&amp; new_plane);
    
    /// Makes the plane of this cluster invalid
    Cluster&amp; InvalidatePlane();
    
    Cluster              operator +  (const Cluster&amp;);
    friend std::ostream&amp; operator << (std::ostream&amp; o, const Cluster&amp; c);
    friend bool          operator <  (const Cluster &amp; a, const Cluster &amp; b);
    
  }; // class Cluster
} // namespace recob
</code>
</pre>


h3. Actions

The implementation status refers to the branch @feature/DataProductRevisionNewCluster@.

|_.  Target           |_. Action                        |_. Action item             |_. Status                                                   |
|/6. @dQdW()@         |/6. removal (also uncertainty)   | approval                  | %{color:green}approved[1]%                                 |
|                                                         remove data member        | %{color:green}done%                                        |
|                                                         interface removal         | %{color:green}done%                                        |
|                                                         constructor update        | %{color:green}done%                                        |
|                                                         user code update: removal | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:red}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                         user code: verify it&#39;s not used | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/6. @dTdW()@         |/6. removal (also uncertainty)   | approval                  | %{color:green}approved[1]%                                 |
|                                                         remove data members       | %{color:green}done%                                        |
|                                                         interface removal         | %{color:green}done%                                        |
|                                                         constructor update        | %{color:green}done%                                        |
|                                                         user code update: removal | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:red}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                         user code: verify it&#39;s not used | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/7. @NHits()@        |/7. add number of hits           | approval                  | %{color:green}approved[1]%                                 |
|                                                         add data member           | %{color:green}done%                                        |
|                                                         add accessor              | %{color:green}done%                                        |
|                                                         constructor update        | %{color:green}done%                                        |
|                                                         write algorithm           | %{color:green}done%                                        |
|                                                       user code update: construct | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                         user code update: fill    | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/6. @Start/EndWire()@ |/6. add wire coordinates        | approval                  | %{color:green}approved[1]%                                 |
|                                                         add data member           | %{color:green}done%                                        |
|                                                         add accessor              | %{color:green}done%                                        |
|                                                         constructor update        | %{color:green}done%                                        |
|                                                         user code update: construct | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                         user code update: fill    | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/6. @Start/EndTick()@ |/6. add tick coordinates        | approval                  | %{color:green}approved[1]%                                 |
|                                                         add data member           | %{color:green}done%                                        |
|                                                         add accessor              | %{color:green}done%                                        |
|                                                         constructor update        | %{color:green}done%                                        |
|                                                         user code update: construct | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                         user code update: fill    | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/7. @Start/EndCharge()@ |/7. add charge at ends        | approval                  | %{color:orange}pending[3]%                                 |
|                                                         add data member           | %{color:green}done%                                        |
|                                                         add accessor              | %{color:green}done%                                        |
|                                                         constructor update        | %{color:green}done%                                        |
|                                                         write algorithm           | %{color:green}done%                                        |
|                                                       user code update: construct | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                         user code update: fill    | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/7. @Start/EndAngle()@ |/7. add angles                 | approval                  | %{color:green}approved[1]%                                 |
|                                                         add data member           | %{color:green}done%                                        |
|                                                         add accessor              | %{color:green}done%                                        |
|                                                         constructor update        | %{color:green}done%                                        |
|                                                         connect algorithm         | %{color:green}done%                                        |
|                                                       user code update: construct | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                         user code update: fill    | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/7. @Start/EndOpeningAngle()@ |/7. add opening angles  | approval                  | %{color:green}approved[1]%                                 |
|                                                         add data member           | %{color:green}done%                                        |
|                                                         add accessor              | %{color:green}done%                                        |
|                                                         constructor update        | %{color:green}done%                                        |
|                                                         connect algorithm         | %{color:green}done%                                        |
|                                                         user code update: construct | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                         user code update: fill    | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/7. @SummedADC()@     |/7. add total summed ADC        | approval                  | %{color:green}approved[1]%                                 | from @recob::Hit::SummedADC()@ |
|                                                         add data member           | %{color:green}done%                                        |
|                                                         add accessor              | %{color:green}done%                                        |
|                                                         constructor update        | %{color:green}done%                                        |
|                                                         write algorithm           | %{color:green}done%                                        |
|                                                         user code update: construct | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                         user code update: fill    | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/7. @SummedADCave()@  |/7. add hit summed ADC average  | approval                  | %{color:green}approved[1]%                                 |
|                                                         add data member           | %{color:green}skipped%                                     | being just @SummedADC()/NHits()@, we don&#39;t store it |
|                                                         add accessor              | %{color:green}done%                                        |
|                                                         constructor update        | %{color:green}done%                                        |
|                                                         write algorithm           | %{color:green}done%                                        |
|                                                         user code update: construct | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                         user code update: fill    | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/7. @SummedADCstdDev()@ |/7. add hit summed ADC std. dev. | approval               | %{color:green}approved[1]%                                 |
|                                                         add data member           | %{color:green}done%                                        |
|                                                         add accessor              | %{color:green}done%                                        |
|                                                         constructor update        | %{color:green}done%                                        |
|                                                         write algorithm           | %{color:green}done%                                        |
|                                                         user code update: construct | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                         user code update: fill    | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/7. @IntegratedADC()@     |/7. add total integrated charge | approval              | %{color:green}approved[1]%                                 | from @recob::Hit::Integral()@ |
|                                                         add data member           | %{color:green}done%                                        |
|                                                         add accessor              | %{color:green}done%                                        |
|                                                         constructor update        | %{color:green}done%                                        |
|                                                         connect algorithm         | %{color:green}done%                                        |
|                                                         user code update: construct | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                         user code update: fill    | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/7. @IntegratedADCave()@  |/7. add hit integrated ADC average | approval           | %{color:green}approved[1]%                                 |
|                                                         add data member           | %{color:green}skipped%                                     | being just @Integral()/NHits()@, we don&#39;t store it |
|                                                         add accessor              | %{color:green}done%                                        |
|                                                         constructor update        | %{color:green}done%                                        |
|                                                         connect algorithm         | %{color:green}done%                                        |
|                                                       user code update: construct | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                         user code update: fill    | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/7. @IntegratedADCstdDev()@ |/7. add hit integrated ADC std. dev. | approval       | %{color:green}approved[1]%                                 |
|                                                         add data member           | %{color:green}done%                                        |
|                                                         add accessor              | %{color:green}done%                                        |
|                                                         constructor update        | %{color:green}done%                                        |
|                                                         connect algorithm         | %{color:green}done%                                        |
|                                                       user code update: construct | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                         user code update: fill    | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/6. @fTotalCharge@      |/6. removal                   | approval                  | %{color:green}approved[1]%                                 |
|                                                         remove data member        | %{color:green}done%                                        |
|                                                         interface removal         | %{color:green}done%                                        |
|                                                         constructor update        | %{color:green}done%                                        |
|                                                         user code update: removal | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                         user code: verify it&#39;s not used | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/7. @MultipleHitWires()@ |/7. ratio between wires span and hits number | approval  | %{color:green}approved[1]%                                 |
|                                                         add data member           | %{color:green}done%                                        |
|                                                         add accessor              | %{color:green}done%                                        |
|                                                         constructor update        | %{color:green}done%                                        |
|                                                         write algorithm           | %{color:green}done%                                        |
|                                                         user code update: construct | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                         user code update: fill    | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|/7. @Width()@             |/7. a measure of cluster width | approval               | %{color:green}approved[1]%                                 |
|                                                         add data member           | %{color:green}done%                                        |
|                                                         add accessor              | %{color:green}done%                                        |
|                                                         constructor update        | %{color:green}done%                                        |
|                                                         connect algorithm         | %{color:green}done%                                        |
|                                                       user code update: construct | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|                                                         user code update: fill    | %{color:green}@lardata@%, %{color:green}@larevt@%, %{color:green}@larsim@%, %{color:green}@larreco@%, %{color:green}@larpandora@%, %{color:green}@lareventdisplay@%, %{color:green}@larexamples@%, %{color:green}@larana@%, %{color:green}@larsoft@%, %{color:green}@uboonecode@%, %{color:green}@lbnecode@%, %{color:red}@t962offline@%, %{color:red}@lar1ndcode@% |
|    documentation    | complete class documentation    | %{color:green}done% |                                                           |


h3. Tests

|_.  Test type                   |_. Ran on version |_. Outcome              |
|/2. standard LArSoft test suite | @v03_06_00@      | %{color:green}success% |
|                                  @v03_08_00@      | %{color:red}TODO%      |


h3. To-do&#39;s

h4. @MultipleHitWires@ name

@recob::Cluster::MultipleHitWires()@ may need a better name.

h4. @ClusterMergeAlg@ (@larreco@)

@ClusterMergeAlg::Angle2DCompatibility()@ seems to expect @slope@ as a dT/dW, but then it uses in a formula that suggests @angle@ is in degrees.
The new code assumes @angle@ to be an angle in radians, and the comparison angle is converted from degrees to radians. This needs to be checked.

h4. @ShowerReco@ module (@larreco@)

The @slope@ variable is used at one point like a angle in degrees (and converted into degrees), at another as a @dTdW@ in -homogeneous units (and converted into a ratio of wire over time ticks).
I have added a @angle@ variable and hope it makes the thing a bit clearer. Needs checking.

h4. @LineMerger@ module (@larreco@)

This module requires some more work than the average cluster finder.
 * cluster compatibility criteria: I have replaced the use of @dTdW()@ with @StartAngle()@ and @EndAngle()@
 * position compatibility still has hard-coded constants; it *urges* to have a general function to compute 2D distance on wire/time plane
 * the addition of clusters is removed, since it&#39;s impossible to correctly add all the features; some replacement needs to be created

h4. @ShowerAngleCluster@ module (@larreco@)

The fix is being delayed, since this module depends on the old version of @ClusterParamsAlg@ while my changes depend on the new one.
I will wait for the update of @ShowerAlgleCluster@ module before I pick it again.

h4. @RecoBaseDrawer@ (@lareventdisplay@)

@RecoBaseDrawer::Cluster2D()@ used @Cluster::dTdW()@ to get the slope for a line to be drawn.
It&#39;s not clear to me if it expects it homogeneous ("cm/cm") or in the time/wire units.
I am assuming it wants it homogeneous, but it might be wrong.

h4. @GraphCluster@ module (@lareventdisplay@)

This is a cluster producer, and it would need @ClusterParamsAlg@ to fill completely the cluster.
I suspect this cluster is going to be used only for drawing purposes and that therefore it does not need that complication.
The complication is that to use @ClusterParamsAlg@, @lareventdisplay@ must depend and link to @larreco@.
So I hope I am getting away without setting the angles and charge (@dTdW@ was filled with @0@ anyway) and I have just filled the "easy" total charge statistics.

h4. @LArPandoraHelper@ (@larpandora@)

A new feature has been left half-implemented: _non-core_ hits are excluded from some computation, but no hit is yet acknowledged as isolated non-core.

h4. @ClusterCrawler@, @CCTrackMaker@ modules (@larreco@)

Bruce Baller is still working on updating @ClusterCrawler@ and @CCTrackMaker@ modules.
I have added some placeholder code, and the tracker won&#39;t work (the hit finder and the cluster finder will have some variable with a default value).

h4. @Cluster3D@ module needs dT/dW restored (@larreco@)

I have used the @StandardClusterParamsAlg@ class to define _all_ the parameters of the new cluster.
The original code computes a meaningful dT/dW, though, and it should be used instead of the standard one.
I should implement a new @ClusterParamsAlgBase@ class that allows to override some fields with a set value.


h4. Summary of affected modules and algorithms

Cluster creation modules and algorithms:

|_. Module name               |_. Source file                                                  |_. Contact person                    |
| @LArPandoraParticleCreator@ | @larpandora/LArPandoraInterface/LArPandoraParticleCreator.cxx@ | Andrew Blake                        |
| @ClusterCheater@            | @larreco/ClusterFinder/ClusterCheater_module.cc@               | Brian Rebel                         |
| @ClusterCrawler@            | @larreco/ClusterFinder/ClusterCrawler_module.cc@               | Bruce Baller                        |
| @DBcluster@                 | @larreco/ClusterFinder/DBcluster_module.cc@                    | Tingjun Yang                        |
| @ClusterCrawlerShower@      | @larreco/ClusterFinder/ClusterCrawlerShower_module.cc@         | _removed_                           |
| @HoughLineFinder@           | @larreco/ClusterFinder/HoughLineFinder_module.cc@              | Ben Carls                           |
| @KingaCluster@              | @larreco/ClusterFinder/KingaCluster_module.cc@                 | _removed_                           |
| @LineMerger@                | @larreco/ClusterFinder/LineMerger_module.cc@                   | Ben Carls                           |
| @ShowerAngleCluster@        | @larreco/ClusterFinder/ShowerAngleCluster_module.cc@           | _removed_                           |
| @SmallClusterFinder@        | @larreco/ClusterFinder/SmallClusterFinder_module.cc@           | Corey Adams                         |
| @GraphCluster@              | @lareventdisplay/EventDisplay/GraphCluster_module.cc@          | Andrzej Szelc                       |


h3. Update reference table

|_. Old construct                |_. New construct                              |_. Comments                                                            |
| @Cluster::StartPos()[0]@       | @Cluster::StartWire()@                       |
| @Cluster::StartPos()[1]@       | @Cluster::StartTick()@                       |
| @Cluster::EndPos()[0]@         | @Cluster::EndWire()@                         |
| @Cluster::EndPos()[1]@         | @Cluster::EndTick()@                         |
| @Cluster::SigmaStartPos()@     |/2. removed                                   |
| @Cluster::SigmaEndPos()@                                                      |
|/2. @Cluster::TotalCharge()@    | @Cluster::Integral()@                        | from hit shape                                                        |
|                                  @Cluster::SummedADC()@                       | from calibrated ADC counts                                            |
| @Cluster::dTdW()@              | start from @std::tan(Cluster::StartAngle())@ | @dTdW@ was in wire/tick units, conversions with radians may be needed |
| @Cluster::dQdW()@              | start from @Cluster::StartCharge()@          |



h2. @recob::EndPoint2D@

@recob::EndPoint2D@ should be redefined as:
* @Vertex2D@ data product: a reconstructed object (probably defined from the output of @FeatureVertexFinder@ producer)
* @EndPoint2D@ class: a simple geometric object (wire,time tick), not necessarily a data product

h3. Current declaration

(from @lardata@ @v03_04_04@)

<pre>
<code class="cpp">
  class EndPoint2D  {

  public:

    EndPoint2D();  ///Default constructor

   private:
    double         fDriftTime;    ///< vertex&#39;s drift time
    geo::WireID    fWireID;      ///< vertex&#39;s wireID
    int            fID;           ///< vertex&#39;s ID
    double         fStrength;     ///< vertex&#39;s strength
    geo::View_t    fView;         ///< view for this end point
    double         fTotalCharge;  ///< total charge of hits associated with end point

  public:
    EndPoint2D(double driftTime,
          geo::WireID wireID,
          double strength,
          int id,
          geo::View_t view,
          double totalQ);

    double         Charge()    const;
    geo::View_t    View()      const;
    double         DriftTime() const;
    geo::WireID    WireID()    const;
    int            ID()        const;
    double         Strength()  const;

    friend std::ostream&amp; operator << (std::ostream&amp; o, const EndPoint2D&amp; c);

  };
</code>
</pre>


h3. Actions

|_.  Target            |_. Action                     |_. Action item              |_. Status                                                   |
|    class definitions | %{color:red}to be defined%   |                            |                                                            |
|    documentation     | complete class documentation | %{color:red}to be defined% |                                                            |


h3. Tests

|_.  Test type                |_. Ran on version |_. Outcome          |
| standard LArSoft test suite | not run          | %{color:red}TO DO% |



h2. @recob::Track@

The tracking product model is still under discussion.
The agreement is currently toward:
* @recob::Track@ data product: contains simple track information (begin and end of track, quality of fit) and owns "trajectory points"
* @recob::Trajectory@ data products: concrete data products following an abstract interface; the interface represents a geometrical continuous representation of the trajectory of the track
* @recob::Momentum@ data product: contains the result of momentum calculation algorithms

The priorty of at least part of this implementation will yield to the other changes.

Also, *policies* will be defined:
* minimum density of trajectory points stored in the track object


h3. Current declaration

(from @lardata@ @v03_04_04@)

<pre>
<code class="cpp">
  class Track {

  public:

    //Default constructor
    Track();

  private:

  protected:

    std::vector<TVector3>               fXYZ;           ///< position of points along the track
    std::vector<TVector3>               fDir;           ///< direction at each point along the track
    std::vector<TMatrixD >              fCov;           ///< covariance matrix of positions
                                                        ///< possibly only end points are stored
    std::vector< std::vector <double> > fdQdx;          ///< charge deposition per unit length at points
                                                        ///< along track outer vector index is over view
    std::vector<double>                 fFitMomentum;   ///< momentum at start and end of track
                                                        ///< determined from a fit. Intermediate points
                                                        ///< can be added if desired
    int                                 fID;            ///< track&#39;s ID

  public:

    // Bezier-like constructor
    Track(std::vector<TVector3>               const&amp; xyz,
     std::vector<TVector3>               const&amp; dxdydz,
     std::vector< std::vector <double> > dQdx = std::vector< std::vector<double> >(0),
     std::vector<double>                 fitMomentum = std::vector<double>(2, util::kBogusD),
     int                                 ID = -1);
    
    // Kalman-like constructor
    Track(std::vector<TVector3>        const&amp; xyz,
     std::vector<TVector3>        const&amp; dxdydz,
     std::vector<TMatrixD >       const&amp; cov,
     std::vector< std::vector <double> > dQdx = std::vector< std::vector<double> >(0),
     std::vector<double>                 fitMomentum = std::vector<double>(2, util::kBogusD),
     int                                 ID = -1);

    void            Extent(std::vector<double> &amp;xyzStart,
            std::vector<double> &amp;xyzEnd)        const;
    void            Direction(double *dcosStart,
               double *dcosEnd)                 const;
    double          ProjectedLength(geo::View_t view)          const;
    double          PitchInView(geo::View_t view,
            size_t trajectory_point=0)     const;
    int             ID()                                       const;


    // A trajectory point is the combination of a position vector
    // and its corresponding direction vector
    size_t          NumberTrajectoryPoints()                    const;
    size_t          NumberCovariance()                          const;
    size_t          NumberFitMomentum()                         const;
    size_t          NumberdQdx(geo::View_t view=geo::kUnknown)  const;
    double          Length(size_t p=0)                          const;
    void            TrajectoryAtPoint(unsigned int  p,
                  TVector3     &amp;pos,
                  TVector3     &amp;dir)        const;
    const double&amp;   DQdxAtPoint(unsigned int p,
            geo::View_t view=geo::kUnknown) const;
    const TVector3&amp; DirectionAtPoint (unsigned int p)           const;
    const TVector3&amp; LocationAtPoint  (unsigned int p)           const;
    const double&amp;   MomentumAtPoint  (unsigned int p)           const;
    const TMatrixD&amp; CovarianceAtPoint(unsigned int p)           const;

    const TVector3&amp; Vertex()                                    const;
    const TVector3&amp; End()                                      const;
    const TVector3&amp; VertexDirection()                          const;
    const TVector3&amp; EndDirection()                             const;
    const TMatrixD&amp; VertexCovariance()                         const;
    const TMatrixD&amp; EndCovariance()                            const;
    const double&amp;   VertexMomentum()                           const;
    const double&amp;   EndMomentum()                              const;

    double          Theta()                                     const;
    double          Phi()                                       const;

    // Calculate rotation matrices between global (x,y,z) and local (u,v,w)
    // coordinate systems based on track direction (fDir).
    // The local w-axis points along the track direction.
    void GlobalToLocalRotationAtPoint(unsigned int p, TMatrixD&amp; rot) const;
    void LocalToGlobalRotationAtPoint(unsigned int p, TMatrixD&amp; rot) const;

    friend bool     operator <   (const Track &amp; a, const Track &amp; b);
  protected:

    friend std::ostream&amp; operator << (std::ostream&amp; stream, Track const&amp; a);

  };
</code>
</pre>


h3. Actions

|_.  Target             |_. Action                            |_. Action item                |_. Status                                                   |
|    @Track@ definition | definition of @recob@Track@ content | %{color:red}to be defined%   |                                                            |
|    other definitions  | definition of @recob@Trajectory@ and @recob::Momentum@ | %{color:red}to be defined% |                                           |
|    documentation      | complete class documentation        | %{color:red}to be defined%   |                                                            |


h3. Tests

|_.  Test type                |_. Ran on version |_. Outcome          |
| standard LArSoft test suite | not run          | %{color:red}TO DO% |




--- 

fn1. @LArSoft@ Data Architecture Meeting, "December 8, 2014":https://indico.fnal.gov/conferenceDisplay.py?confId=9173

fn2. Discussion, including Erica Snider and Gianluca Petrillo, on December 11, 2014. Saturation is inherently per-sample and flagging the whole raw digit where saturation happened is not informative.

fn3. Latest discussion: MicroBooNE IIT workshop, January 7th, 2015.

fn4. Proposal by MicroBooNE on January 7th, 2015 and acknowledgement by LBNF on January 28th, 2015

