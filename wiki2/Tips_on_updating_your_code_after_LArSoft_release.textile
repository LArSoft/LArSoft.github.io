
h1. Tips on updating your code after LArSoft release

{{>toc}}

LArSoft releases happen often, and code that worked fine with one version might even not work on the next.
Here is some tips on updating your code so that it&#39;s back and rocking.

h2(count). Updating an existing MRB area

There are a few steps.

# Log in to a fresh session.
# Set up the latest version of @larsoft@ with the qualifiers you want to use (e.g. @debug@ or @prof@).
# Move to your local development area.
# Create a new local products area:
<pre>
mrb newDev -p
</pre>
# (Optional) delete the old product area. This is not required, but if you keep it around it may confuse @mrbslp@.
# Setup the new product area
<pre>
source localProducts*/setup
</pre>
# Update all of your checked out repositories to head:
<pre>
cd srcs/<repo1>
git pull
cd ../<repo2>
git pull
...
</pre>
# Do a clean build
<pre>
mrb z
mrbsetenv
mrb i <your favorite options>
</pre>

For a detailed example (from a particular project, so there is some project-specific information), look at [[sbndcode:Upgrade_to_LArSoft_6]]

h2(count). Dealing with breaking changes

If you&#39;re unsure what a breaking change is, read the "description of breaking changes":https://cdcvs.fnal.gov/redmine/projects/larsoft/wiki/Getting_new_code_into_a_LArSoft_release

To help in fixing, there is important information in the [[Breaking Changes]] wiki page.


h2(count). Specific code updates

* how to update [[from ROOT vectors (TVector3) to ROOT GenVector|Adopting new ROOT vector and matrix classes]]
